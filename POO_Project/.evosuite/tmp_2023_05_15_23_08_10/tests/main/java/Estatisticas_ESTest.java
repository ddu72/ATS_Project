/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 22:18:49 GMT 2023
 */

package main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.nio.channels.DatagramChannel;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import main.java.CasaInteligente;
import main.java.Comercializador;
import main.java.Estatisticas;
import main.java.Periodo;
import main.java.Simulador;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Estatisticas_ESTest extends Estatisticas_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0.0, (-1300.0526871106756), mockRandom0);
      hashMap1.put("EcOt,ye ?Kj~", comercializador0);
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      linkedList0.add(periodo0);
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      estatisticas0.estatistica2();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      linkedList0.add(periodo0);
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      Scanner scanner0 = new Scanner("p`Z*40pRyr2)d");
      estatisticas0.escolherEstatistica(scanner0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica4(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas((Map<Integer, CasaInteligente>) null, hashMap0, linkedList0);
      Scanner scanner0 = new Scanner("RtQMW4|~}]]8OQ");
      LocalDate localDate0 = MockLocalDate.now();
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      linkedList0.add(periodo0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica4(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"RtQMW4|~}]]8OQ\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      linkedList0.add((Periodo) null);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica4(scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Periodo", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      Map<String, Comercializador> map1 = simulador0.getComercializadores();
      Estatisticas estatisticas0 = new Estatisticas(map0, map1, (List<Periodo>) null);
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica3(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      Map<String, Comercializador> map1 = simulador0.getComercializadores();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(map0, map1, linkedList0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica3((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Comercializador", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Map<String, Comercializador> map0 = simulador0.getComercializadores();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas((Map<Integer, CasaInteligente>) null, map0, linkedList0);
      Scanner scanner0 = new Scanner("");
      // Undeclared exception!
      try { 
        estatisticas0.escolherEstatistica(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(0);
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        estatisticas0.escolherEstatistica(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      MockFile mockFile0 = new MockFile("_.rKxt");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        estatisticas0.escolherEstatistica(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      // Undeclared exception!
      try { 
        estatisticas0.escolherEstatistica((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Estatisticas", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Map<String, Comercializador> map0 = simulador0.getComercializadores();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas((Map<Integer, CasaInteligente>) null, map0, linkedList0);
      Scanner scanner0 = new Scanner("uQsUIM&qR");
      scanner0.close();
      // Undeclared exception!
      try { 
        estatisticas0.escolherEstatistica(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      estatisticas0.estatistica4((Scanner) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      estatisticas0.estatistica3(scanner0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica3(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedHashSet<Periodo> linkedHashSet0 = new LinkedHashSet<Periodo>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>(linkedHashSet0);
      linkedList0.add((Periodo) null);
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      hashMap0.put("q|Je^0>", (Comercializador) null);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Map<String, Comercializador> map0 = simulador0.getComercializadores();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas((Map<Integer, CasaInteligente>) null, map0, linkedList0);
      estatisticas0.estatistica2();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedHashSet<Periodo> linkedHashSet0 = new LinkedHashSet<Periodo>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>(linkedHashSet0);
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      hashMap0.put("q|Je^0>", (Comercializador) null);
      estatisticas0.estatistica2();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Integer integer0 = new Integer((-2050342965));
      CasaInteligente casaInteligente0 = new CasaInteligente();
      hashMap0.put(integer0, casaInteligente0);
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      linkedList0.add((Periodo) null);
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, (Map<String, Comercializador>) null, linkedList0);
      // Undeclared exception!
      try { 
        estatisticas0.estatistica1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(map0, hashMap0, linkedList0);
      estatisticas0.estatistica1();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      linkedList0.add((Periodo) null);
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, (Map<String, Comercializador>) null, linkedList0);
      estatisticas0.estatistica1();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      HashMap<String, Comercializador> hashMap1 = new HashMap<String, Comercializador>();
      LinkedList<Periodo> linkedList0 = new LinkedList<Periodo>();
      Estatisticas estatisticas0 = new Estatisticas(hashMap0, hashMap1, linkedList0);
      Scanner scanner0 = new Scanner("\u0000\u0000\u0000");
      Comercializador comercializador0 = new Comercializador("vn+,?JCN.Of0}", 1835.041745270745, 1835.041745270745);
      hashMap1.put("\u0000\u0000\u0000", comercializador0);
      estatisticas0.estatistica3(scanner0);
      assertEquals("java.util.Scanner[delimiters=\\p{javaWhitespace}+][position=3][match valid=true][need input=false][source closed=true][skipped=false][group separator=\\x{2c}][decimal separator=\\x{2e}][positive prefix=][negative prefix=\\Q-\\E][positive suffix=][negative suffix=][NaN string=\\Q\uFFFD\\E][infinity string=\\Q\u221E\\E]", scanner0.toString());
  }
}
