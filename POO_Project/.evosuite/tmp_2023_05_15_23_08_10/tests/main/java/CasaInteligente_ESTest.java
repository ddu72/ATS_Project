/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 22:14:01 GMT 2023
 */

package main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.FileDescriptor;
import java.io.StringReader;
import java.nio.channels.DatagramChannel;
import java.nio.channels.NotYetConnectedException;
import java.time.Clock;
import java.time.LocalDate;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import main.java.CasaInteligente;
import main.java.Comercializador;
import main.java.Fatura;
import main.java.Periodo;
import main.java.Simulador;
import main.java.SmartBulb;
import main.java.SmartCamera;
import main.java.SmartDevice;
import main.java.SmartSpeaker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.roomHasDevice("lz^kDY", (String) null);
      assertFalse(boolean0);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.addToRoom("j)y)u6w;Q6dG@E1cKv", "3r+j#TRKxkC\"+8hb");
      String string0 = casaInteligente0.conteudo();
      assertEquals(0, casaInteligente0.getNif());
      assertEquals("Divisao: j)y)u6w;Q6dG@E1cKv\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (byte)3, (byte) (-68), (byte) (-94), (byte) (-94));
      hashMap0.put("| 1. Mudar comercializador da casa                 |", smartCamera0);
      casaInteligente0.setDevices(hashMap0);
      casaInteligente0.setDeviceOn("| 1. Mudar comercializador da casa                 |");
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (byte)3, (byte) (-68), (byte) (-94), (byte) (-94));
      hashMap0.put("| 1. Mudar comercializador da casa                 |", smartCamera0);
      casaInteligente0.setDevices(hashMap0);
      casaInteligente0.setAllOn(true);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.getNome();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1897, comercializador0);
      casaInteligente0.getNome();
      assertEquals(1897, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("HU;K`w>!lzU@h:!T", 0, comercializador0);
      int int0 = casaInteligente0.getNif();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      int int0 = casaInteligente0.getNif();
      assertEquals(1428, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      casaInteligente0.faturar((LocalDate) null, (LocalDate) null, 1500.2982566, 0.0);
      casaInteligente0.getFaturas();
      assertEquals(1428, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, "N/A", "N/A", 2.5);
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.getDevices();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getComercializador();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador(",,tA8a", 0, 0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.getComercializador();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("HU;K`w>!lzU@h:!T", 0, comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", (-1107), comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals((-1107), casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      casaInteligente0.addToRoom("", "");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(1428, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setFaturas((List<Fatura>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parse((Simulador) null, "| -> Exemplo: OFF,WARM,6.3                         |");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"WARM\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      casaInteligente0.faturar((LocalDate) null, (LocalDate) null, 1500.2982566, 0.0);
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      // Undeclared exception!
      try { 
        casaInteligente0.getFatura(periodo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.Periodo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      Clock clock0 = MockClock.tickMinutes(zoneOffset0);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      // Undeclared exception!
      try { 
        casaInteligente0.faturar(localDate0, localDate0, (-1.0), (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("jDzwW", 0, (Comercializador) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Scanner scanner0 = new Scanner(mockFileInputStream0);
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.conteudo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", (-1107), comercializador0);
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CasaInteligente casaInteligente0 = null;
      try {
        casaInteligente0 = new CasaInteligente((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("HU;K`w>!lzU@h:!T", 0, comercializador0);
      casaInteligente0.setComercializador(comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("HU;K`w>!lzU@h:!T", 0, comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1415, comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertFalse(boolean0);
      assertEquals("N/A", casaInteligente1.getNome());
      assertEquals(1415, casaInteligente0.getNif());
      assertEquals((-1), casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertTrue(boolean0);
      assertEquals(1428, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = Comercializador.parse(" -> A casa ", mockRandom0);
      casaInteligente0.setComercializador(comercializador0);
      casaInteligente0.change();
      Comercializador comercializador1 = casaInteligente0.getComercializador();
      assertNotNull(comercializador1);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      casaInteligente0.change();
      assertEquals(1428, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1897, comercializador0);
      LocalDate localDate0 = MockLocalDate.now();
      casaInteligente0.faturar(localDate0, localDate0, (-2127.220000167614), 0.0);
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      Fatura fatura0 = casaInteligente0.getFatura(periodo0);
      assertEquals(1897, casaInteligente0.getNif());
      assertNotNull(fatura0);
      assertEquals((-2127.220000167614), fatura0.getConsumo(), 0.01);
      assertEquals(0.0, fatura0.getCusto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      casaInteligente0.setDevices(hashMap0);
      hashMap0.put("8!\";#", (SmartDevice) null);
      casaInteligente0.addAllDevices(hashMap0);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Integer integer0 = new Integer(3240);
      hashMap0.put(integer0, (CasaInteligente) null);
      // Undeclared exception!
      try { 
        CasaInteligente.escolherCasa(hashMap0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("| 4. Ligar todos os dispositivos de uma divisao          |", 1897, comercializador0);
      LocalDate localDate0 = MockLocalDate.now();
      casaInteligente0.saltarParaData(localDate0, localDate0);
      assertEquals(1897, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 3036, 3036, 100.0);
      casaInteligente0.addDevice(smartBulb0);
      // Undeclared exception!
      try { 
        casaInteligente0.saltarParaData((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-585), "", "");
      casaInteligente0.addDevice(smartSpeaker0);
      // Undeclared exception!
      try { 
        casaInteligente0.precoPorDia();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("| -> Nao existem casas                             |");
      boolean boolean0 = casaInteligente0.roomHasDevice("| -> Nao existem casas                             |", "| -> Nao existem casas                             |");
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      casaInteligente0.addToRoom("", "");
      boolean boolean0 = casaInteligente0.roomHasDevice("", "");
      assertEquals(1428, casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.addToRoom("j)y)u6w;Q6dG@E1cKv", "3r+j#TRKxkC\"+8hb");
      casaInteligente0.addToRoom("j)y)u6w;Q6dG@E1cKv", "j)y)u6w;Q6dG@E1cKv");
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 1897, comercializador0);
      casaInteligente0.addRoom("");
      boolean boolean0 = casaInteligente0.hasRoom("");
      assertEquals(1897, casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      boolean boolean0 = casaInteligente0.hasRoom("+");
      assertEquals(0, casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.existsRooms();
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      assertFalse(casaInteligente0.existsRooms());
      
      casaInteligente0.addToRoom("", "");
      boolean boolean0 = casaInteligente0.existsRooms();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("| 4. Ligar todos os dispositivos de uma divisao          |", 1897, comercializador0);
      casaInteligente0.addRoom("| 4. Ligar todos os dispositivos de uma divisao          |");
      String string0 = casaInteligente0.conteudo();
      assertEquals("Divisao: | 4. Ligar todos os dispositivos de uma divisao          |\n", string0);
      assertEquals(1897, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("| 4. Ligar todos os dispositivos de uma divisao          |", 1897, comercializador0);
      casaInteligente0.conteudo();
      assertEquals(1897, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-585), "", "");
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.listarDispositivos();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("Divisao: | 4. Lignr todos os disposi9ivos de uma divisao          |\n", "Divisao: | 4. Lignr todos os disposi9ivos de uma divisao          |\n");
      casaInteligente0.setAllOn("Divisao: | 4. Lignr todos os disposi9ivos de uma divisao          |\n", true);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      StringReader stringReader0 = new StringReader("!m ");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      Scanner scanner0 = new Scanner(bufferedReader0);
      String string0 = casaInteligente0.escolherDivisao(scanner0);
      assertEquals("", string0);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("| 4. Ligar todos os dispositivos de uma divisao          |", 1897, comercializador0);
      casaInteligente0.addRoom("| 4. Ligar todos os dispositivos de uma divisao          |");
      LocalDate localDate0 = MockLocalDate.now();
      casaInteligente0.precoPorDia();
      casaInteligente0.toString();
      casaInteligente0.getLocations();
      casaInteligente0.faturar(localDate0, localDate0, (-2127.22), 0.0);
      Simulador simulador0 = new Simulador(localDate0);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      CasaInteligente.escolherCasa(map0, scanner0);
      casaInteligente0.getFatura((Periodo) null);
      casaInteligente0.setAllOn("Casa de | 4. Ligar todos os dispositivos de uma divisao          | (nif: 1897, Fornecedor: N/A (CustoKwh: -1.0000, Fator Impostos: -1.0000))", false);
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.equals(smartBulb0);
      casaInteligente0.getComercializador();
      casaInteligente0.existsDevice("Casa de | 4. Ligar todos os dispositivos de uma divisao          | (nif: 1897, Fornecedor: N/A (CustoKwh: -1.0000, Fator Impostos: -1.0000))");
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      casaInteligente0.setDevices(hashMap0);
      hashMap0.put("8!\";#", (SmartDevice) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setAllOn(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-585), "", "");
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.setOn("", true);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setOn((String) null, true);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      List<Fatura> list0 = casaInteligente0.getFaturas();
      casaInteligente0.setFaturas(list0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getLocations();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getDevices();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      String string0 = casaInteligente0.getNome();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      assertEquals("N/A", casaInteligente0.getNome());
      
      casaInteligente0.setNome("| 1. Listar comercializadores                      |");
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-585), "", "");
      casaInteligente0.addDevice(smartSpeaker0);
      boolean boolean0 = casaInteligente0.existsDevice("");
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.setNif((-1133));
      assertEquals((-1133), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setDevices((Map<String, SmartDevice>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setOn("| 3. Listar Dispositivos                           |", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, "| -> Data atual: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      int int0 = casaInteligente0.getNif();
      assertEquals((-1), int0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDeviceOn("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("$p", 1428, comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertTrue(boolean0);
      assertEquals(1428, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.hasRoom("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.CasaInteligente", e);
      }
  }
}
