/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:47:25 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.MinguoDate;
import java.util.NoSuchElementException;
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.main.java.Comercializador;
import src.main.java.SmartBulb;
import src.main.java.SmartDevice;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartBulb_ESTest extends SmartBulb_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "Warm";
      MockRandom mockRandom0 = new MockRandom((-646L));
      mockRandom0.nextLong();
      int int0 = 1647;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockRandom0.ints((-1), 1647);
      mockRandom0.nextInt((-1));
      mockRandom0.nextInt();
      // Undeclared exception!
      try { 
        SmartBulb.parse("Warm", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1415L));
      Scanner scanner0 = new Scanner("OFF");
      scanner0.hasNext();
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "| -> Escreve no formato Modo,Largura,Altura,TamanhoFicheiro   |";
      Scanner scanner0 = new Scanner("| -> Escreve no formato Modo,Largura,Altura,TamanhoFicheiro   |");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1558), 1070.0, 1438.94880253);
      smartBulb0.getTamanho();
      smartBulb0.clone();
      smartBulb0.toString();
      smartBulb0.getTone();
      smartBulb0.calcularConsumoDiario();
      assertEquals((-3894.5), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 3483, 0.0, 0.0);
      smartBulb0.clone();
      MockRandom mockRandom0 = new MockRandom(1);
      // Undeclared exception!
      try { 
        SmartBulb.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-2137693184), 0.5);
      smartBulb0.setCustoInstalacao((-2137693184));
      smartBulb0.turnOn();
      smartBulb0.turnOn();
      smartBulb0.clone();
      String string0 = "";
      MockRandom mockRandom0 = new MockRandom();
      SmartBulb.parse("", mockRandom0);
      MockFile mockFile0 = new MockFile("");
      Scanner scanner0 = null;
      try {
        scanner0 = new Scanner(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         //  (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartBulb.parse("Neutral", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-3017));
      Comercializador comercializador0 = new Comercializador("| -> Escolhe o id do dispositivo que queres        |", 2448.0060840644, 3306.446639046219);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(2);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      smartBulb0.custoAte(comercializador0, localDate0, localDate0);
      String string0 = smartBulb0.toString();
      assertEquals("Lampada, id: , OFF, Tone: -3017, Tamanho: 0.00", string0);
      
      SmartBulb smartBulb1 = (SmartBulb)smartBulb0.clone();
      assertEquals((-7542.0), smartBulb1.getConsumoDiario(), 0.01);
      assertEquals((-3017), smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setCustoInstalacao(1.0);
      smartBulb0.clone();
      smartBulb0.turnOn();
      smartBulb0.getTone();
      smartBulb0.setTone(2);
      smartBulb0.setTone(1);
      smartBulb0.toString();
      MockRandom mockRandom0 = new MockRandom(2048L);
      // Undeclared exception!
      try { 
        mockRandom0.doubles((double) 2, (double) 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-2959), (-2959));
      MockRandom mockRandom0 = new MockRandom();
      SmartBulb.parse("+--------------------------------------------------+\n", mockRandom0);
      smartBulb0.turnOn();
      double double0 = smartBulb0.getTamanho();
      assertEquals((-2959.0), double0, 0.01);
      
      int int0 = smartBulb0.getTone();
      assertEquals((-2959), int0);
      
      smartBulb0.calcularConsumoDiario();
      assertEquals((-7397.0), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(322);
      int int0 = smartBulb0.getTone();
      assertEquals(322, int0);
      assertEquals(805.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1879527746), (-1879527746));
      smartBulb0.getTamanho();
      smartBulb0.setTamanho((-872.1));
      assertEquals((-872.1), smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          SmartBulb smartBulb0 = new SmartBulb();
          smartBulb0.setTamanho(945.0);
          smartBulb0.setTone((-109));
          smartBulb0.clone();
          smartBulb0.setTone((-109));
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor89.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 570;
      SmartBulb smartBulb0 = new SmartBulb(570);
      smartBulb0.setTone(570);
      double double0 = (-2635.01629496955);
      Comercializador comercializador0 = new Comercializador();
      // Undeclared exception!
      try { 
        MockLocalDate.ofYearDay(2, 0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for DayOfYear (valid values 1 - 365/366): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 2761, (-1.0), (-1.0));
      smartBulb0.calcularConsumoDiario();
      smartBulb0.setOn(true);
      smartBulb0.getTamanho();
      smartBulb0.setTone(0);
      Scanner scanner0 = null;
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 2, 0.0, (-824.8138));
      assertEquals(2, smartBulb0.getTone());
      
      smartBulb0.setTone(0);
      assertEquals(0, smartBulb0.getTone());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(2442);
      smartBulb0.toString();
      smartBulb0.toString();
      MockRandom mockRandom0 = new MockRandom(2442);
      mockRandom0.doubles((long) 0);
      SmartBulb smartBulb1 = SmartBulb.parse("", mockRandom0);
      assertNull(smartBulb1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0.0, 0.0);
      double double0 = smartBulb0.getTamanho();
      assertEquals(0.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0, smartBulb0.getTone());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      int int0 = (-437);
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-437), (-437), (-437));
      MinguoDate minguoDate0 = MockMinguoDate.now();
      smartBulb0.equals(minguoDate0);
      smartBulb0.setOn(false);
      smartBulb0.calcularConsumoDiario();
      smartBulb0.setTamanho(0.0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Scanner scanner0 = new Scanner(pipedInputStream0);
      pipedOutputStream0.close();
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Scanner scanner0 = new Scanner("\n");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0);
      smartBulb0.setConsumoDiario((-2378.4523061765));
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      smartBulb0.consumoAte((LocalDate) null, localDate0);
      smartBulb0.calcularConsumoDiario();
      int int0 = smartBulb0.getTone();
      assertEquals(0.5, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-2137693184), (-2137693184), (-2137693184));
      smartBulb0.calcularConsumoDiario();
      smartBulb0.turnOff();
      smartBulb0.toString();
      smartBulb0.toString();
      smartBulb0.getTone();
      smartBulb0.calcularConsumoDiario();
      assertEquals((-5.3442329595E9), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(3);
      assertEquals(8.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), (-1));
      smartBulb0.setTone((-1));
      smartBulb0.setID("");
      smartBulb0.toString();
      smartBulb0.setTamanho(1.0);
      smartBulb0.clone();
      smartBulb0.turnOn();
      smartBulb0.clone();
      smartBulb0.getTone();
      MockRandom mockRandom0 = new MockRandom((-743L));
      SmartBulb smartBulb1 = SmartBulb.parse("Lampada, id: , OFF, Tone: 0, Tamanho: -1.00", mockRandom0);
      assertNull(smartBulb1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "src/main/java/Formula";
      long long0 = 0L;
      MockRandom mockRandom0 = new MockRandom(0L);
      SmartBulb.parse("src/main/java/Formula", mockRandom0);
      SmartBulb smartBulb0 = null;
      try {
        smartBulb0 = new SmartBulb((SmartBulb) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0L);
      SmartBulb smartBulb0 = SmartBulb.parse("C58KzjN", mockRandom0);
      assertNull(smartBulb0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 1, 0.0);
      SmartBulb smartBulb1 = (SmartBulb)smartBulb0.clone();
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(1, smartBulb1.getTone());
      
      smartBulb0.setTamanho(0.0);
      assertEquals(0.0, smartBulb0.getTamanho(), 0.01);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setTamanho(0.0);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartBulb smartBulb1 = new SmartBulb(smartBulb0);
      assertEquals(1, smartBulb1.getTone());
      assertEquals(3.0, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 1566, 1566);
      assertEquals(3915.5, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(1566.0, smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartBulb.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-618), (-618), 0.0);
      assertEquals((-618), smartBulb0.getTone());
      assertEquals(0.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals((-618.0), smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '*';
      charArray0[1] = '';
      charArray0[2] = ',';
      charArray0[3] = ';';
      charArray0[4] = ':';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Scanner scanner0 = new Scanner(charBuffer0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-646L));
      mockRandom0.nextLong();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockRandom0.ints();
      mockRandom0.nextDouble();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockRandom0.nextInt((-1));
      mockRandom0.nextInt();
      Random.setNextRandom(67);
      // Undeclared exception!
      try { 
        SmartBulb.parse("Warm", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1879527746), (-740.8886));
      smartBulb0.clone();
      SmartBulb.parse("WARM", (java.util.Random) null);
      smartBulb0.toString();
      smartBulb0.clone();
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Scanner scanner0 = new Scanner("OFF");
      Random.setNextRandom(0);
      scanner0.findWithinHorizon(">Nw3scgVk'h}", 0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Random.setNextRandom((-326));
      SmartBulb smartBulb0 = new SmartBulb((-326));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      smartBulb0.setTamanho(0.5);
      MockRandom mockRandom0 = new MockRandom();
      StringReader stringReader0 = new StringReader("RKg}XpldD$ z");
      char[] charArray0 = new char[4];
      charArray0[0] = '9';
      charArray0[1] = 'J';
      charArray0[2] = ' ';
      stringReader0.read(charArray0);
      Scanner scanner0 = new Scanner(stringReader0);
      assertEquals(10, scanner0.radix());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Scanner scanner0 = new Scanner("/P");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Scanner scanner0 = new Scanner("N/A");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-792), 1819.7156469471126);
      smartBulb0.setTone(3);
      smartBulb0.setConsumoDiario(1819.7156469471126);
      smartBulb0.setTamanho((-792));
      Random.setNextRandom((-1512));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-792), 1819.7156469471126);
      smartBulb0.setTone(3);
      MockRandom mockRandom0 = new MockRandom(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SmartBulb.parse("7irB", mockRandom0);
      smartBulb0.setConsumoDiario(1819.7156469471126);
      smartBulb0.setTamanho((-792));
      Random.setNextRandom((-1512));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.clone();
      smartBulb0.setTone(2);
      String string0 = null;
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), (-1));
      smartBulb0.setTone((-1));
      smartBulb0.setID("");
      smartBulb0.toString();
      smartBulb0.clone();
      smartBulb0.turnOn();
      smartBulb0.clone();
      MockRandom mockRandom0 = new MockRandom((-743L));
      SmartBulb smartBulb1 = SmartBulb.parse("Lampada, id: , OFF, Tone: 0, Tamanho: -1.00", mockRandom0);
      assertNull(smartBulb1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "Neutral";
      // Undeclared exception!
      try { 
        SmartBulb.parse("Neutral", (java.util.Random) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartBulb", e);
      }
  }
}
