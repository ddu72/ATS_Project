/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:46:10 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.DatagramChannel;
import java.nio.channels.NotYetConnectedException;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import src.main.java.Comercializador;
import src.main.java.SmartBulb;
import src.main.java.SmartCamera;
import src.main.java.SmartDevice;
import src.main.java.SmartSpeaker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartDevice_ESTest extends SmartDevice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      smartCamera0.setCustoInstalacao(1683.3333);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(1683.3333, smartCamera0.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertTrue(boolean0);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(285);
      smartBulb0.calcularConsumoDiario();
      assertEquals(713.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      String string0 = smartBulb0.toString();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("Lampada, id: N/A, OFF, Tone: 1, Tamanho: 0.00", string0);
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-2008610447), (-2008610447), (-2008610447));
      smartCamera0.setID((String) null);
      smartCamera0.getID();
      assertEquals((-5.19150907048651E9), smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      String string0 = smartSpeaker0.getID();
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 1, 1, 1);
      double double0 = smartCamera0.getCustoInstalacao();
      assertEquals(700.0, double0, 0.01);
      assertEquals(0.500000002, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      
      smartSpeaker0.setCustoInstalacao((-1.0));
      double double0 = smartSpeaker0.getCustoInstalacao();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, (String) null, ", Tone: ");
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals(0.5, double0, 0.01);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals("N/A", smartSpeaker0.getID());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setCustoInstalacao((-0.2512986164803581));
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("jt]OW!jU%fywg");
      hashMap0.put("jt]OW!jU%fywg", smartCamera0);
      assertEquals((-0.2512986164803581), smartCamera0.getCustoInstalacao(), 0.01);
      
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals((-0.2512986164803581), smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartBulb smartBulb0 = new SmartBulb();
      hashMap0.put("jt]OW!jU%fywg", smartBulb0);
      Scanner scanner0 = new Scanner("jt]OW!jU%fywg");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals(0.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertEquals("N/A", smartDevice0.getID());
      assertEquals(3.0, smartDevice0.getConsumoDiario(), 0.01);
      assertNotNull(smartDevice0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-3816), ")", ")");
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      MockRandom mockRandom0 = new MockRandom(100);
      Comercializador comercializador0 = Comercializador.parse("(tVwvZN?ENgHSv", mockRandom0);
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      double double0 = smartSpeaker0.custoAte(comercializador0, localDate1, localDate0);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals((-1.025), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 3560, "", "");
      LocalDate localDate0 = MockLocalDate.ofYearDay(100, 100);
      Period period0 = Period.of(3560, 3560, 100);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(3560);
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      double double0 = smartSpeaker0.consumoAte(localDate1, localDate0);
      assertEquals((-22.0), double0, 0.01);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 2145301984, 2145301984, 0.0);
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertTrue(smartDevice0.equals((Object)smartBulb0));
      assertEquals(150.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertTrue(smartDevice0.isOn());
      assertEquals(0.0, smartDevice0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      
      smartSpeaker0.setCustoInstalacao((-1.0));
      smartSpeaker0.clone();
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertEquals(3.0, smartDevice0.getConsumoDiario(), 0.01);
      assertTrue(smartDevice0.equals((Object)smartBulb0));
      assertEquals("N/A", smartDevice0.getID());
      assertEquals(0.0, smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("");
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("jt]OW!jU%fywg");
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((SmartDevice.Modo) null, (-4659), (-4659));
      SmartBulb smartBulb1 = new SmartBulb(1686);
      // Undeclared exception!
      try { 
        smartBulb0.equals(smartBulb1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 4018, 4018, 0.0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 2);
      // Undeclared exception!
      try { 
        smartBulb0.custoAte((Comercializador) null, localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 457, (-1879527746), 1234.29, 0.0);
      double double0 = smartCamera0.getConsumoDiario();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.turnOn();
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.getID();
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.getModo();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      double double0 = smartBulb0.getCustoInstalacao();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-4659), (-2329.7763064));
      smartBulb0.setConsumoDiario((-4659));
      assertEquals((-4659.0), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 3560, "", "");
      smartSpeaker0.change();
      assertTrue(smartSpeaker0.isOn());
      assertEquals(5.5, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1352), "jt]OW!jU%fywg", "-> ", (-1352));
      hashMap0.put("jt]OW!jU%fywg", smartSpeaker0);
      Scanner scanner0 = new Scanner("jt]OW!jU%fywg");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals((-1352.0), smartDevice0.getConsumoDiario(), 0.01);
      assertNotNull(smartDevice0);
      assertEquals(350.0, smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("jt]OW!jU%fywg");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertNull(smartDevice0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera();
      smartCamera0.setCustoInstalacao(100.0);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(100.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-4659), (-4659));
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertTrue(smartDevice0.equals((Object)smartBulb0));
      
      smartBulb0.setID("7Hl e");
      boolean boolean0 = smartBulb0.equals(smartDevice0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      boolean boolean0 = smartBulb0.equals(1);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-4659), (-2329.7763064));
      SmartBulb smartBulb1 = new SmartBulb(1686);
      boolean boolean0 = smartBulb0.equals(smartBulb1);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(4215.5, smartBulb1.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals(150.0, smartBulb1.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 2, 2, 2);
      boolean boolean0 = smartCamera0.isOn();
      assertEquals(0.500000016, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.isOn();
      assertFalse(boolean0);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setOn(false);
      smartSpeaker0.change();
      assertEquals("N/A", smartSpeaker0.getID());
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(SmartDevice.Modo.OFF, smartSpeaker0.getModo());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      Period period0 = Period.ofYears(100);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Comercializador comercializador0 = new Comercializador("| -> Escreve no formato Modo,Tone,Tamanho          |", 100, 100);
      double double0 = smartSpeaker0.custoAte(comercializador0, localDate0, localDate0);
      assertEquals("N/A", smartSpeaker0.getID());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 183, "ABSz$2|pSX]m8;xu.e", "jt]OW!jU%fywg");
      // Undeclared exception!
      try { 
        smartSpeaker0.consumoAte((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      Period period0 = Period.ofYears(100);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      double double0 = smartSpeaker0.consumoAte(localDate0, localDate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartSpeaker0.getID());
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-3816), ")", ")");
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Comercializador comercializador0 = new Comercializador();
      double double0 = smartSpeaker0.custoAte(comercializador0, localDate0, localDate0);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-4659), (-2329.7763064));
      SmartDevice smartDevice0 = smartBulb0.clone();
      boolean boolean0 = smartBulb0.equals(smartDevice0);
      assertEquals((-11647.0), smartDevice0.getConsumoDiario(), 0.01);
      assertTrue(boolean0);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      boolean boolean0 = smartBulb0.equals((Object) null);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 3149, 3149, 3149);
      smartBulb0.setOn(true);
      assertEquals(3149.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.turnOff();
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }
}
