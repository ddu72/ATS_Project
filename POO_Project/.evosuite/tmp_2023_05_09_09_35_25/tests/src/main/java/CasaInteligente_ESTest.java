/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:40:38 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.ProtocolFamily;
import java.net.StandardProtocolFamily;
import java.nio.channels.DatagramChannel;
import java.nio.channels.NotYetConnectedException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.main.java.CasaInteligente;
import src.main.java.Comercializador;
import src.main.java.Fatura;
import src.main.java.Periodo;
import src.main.java.Simulador;
import src.main.java.SmartCamera;
import src.main.java.SmartDevice;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 0.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      LocalDate localDate1 = MockLocalDate.ofYearDay(1, 1);
      casaInteligente0.faturar(localDate1, localDate0, 0.0, 0);
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      LinkedList<Fatura> linkedList0 = new LinkedList<Fatura>();
      casaInteligente0.setFaturas(linkedList0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      SmartCamera smartCamera0 = new SmartCamera();
      casaInteligente0.addDevice(smartCamera0);
      double double0 = casaInteligente0.precoPorDia();
      assertEquals(0, casaInteligente0.getNif());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      String string0 = casaInteligente0.getNome();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("H(!VfD kyyqcNR5", (-2520.1), 0.5);
      CasaInteligente casaInteligente0 = new CasaInteligente("H(!VfD kyyqcNR5", 2147483645, comercializador0);
      int int0 = casaInteligente0.getNif();
      assertEquals(2147483645, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      int int0 = casaInteligente0.getNif();
      assertEquals((-1), int0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("`", 621, comercializador0);
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      casaInteligente0.getLocations();
      assertEquals(621, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.addToRoom("", " e:K}nAF^}bvmQ{4<K");
      casaInteligente0.getLocations();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.faturar((LocalDate) null, (LocalDate) null, (-419), (-419));
      casaInteligente0.getFaturas();
      assertEquals((-419), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      casaInteligente0.faturar(localDate0, localDate0, 5.0, 0);
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      Fatura fatura0 = casaInteligente0.getFatura(periodo0);
      assertEquals(0.0, fatura0.getCusto(), 0.01);
      assertNotNull(fatura0);
      assertEquals(5.0, fatura0.getConsumo(), 0.01);
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(";# )E", 3, comercializador0);
      SmartCamera smartCamera0 = new SmartCamera();
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.getDevices();
      assertEquals(3, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getComercializador();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 0.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.getComercializador();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      Comercializador comercializador0 = Comercializador.parse((String) null, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("87j!]", 0, comercializador0);
      casaInteligente0.getComercializador();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("H(!VfD kyyqcNR5", (-2520.1), 0.5);
      CasaInteligente casaInteligente0 = new CasaInteligente("H(!VfD kyyqcNR5", 2147483645, comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(2147483645, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.addRoom("8)8sioJMyqiTnr[+mMDw");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals((-419), casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      casaInteligente0.setDevices((Map<String, SmartDevice>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.setAllOn(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        casaInteligente0.saltarParaData(localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parse((Simulador) null, "Bb}C,&avAu");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"&avAu\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.hasRoom("m$W1N`G$NcXW!}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.faturar((LocalDate) null, (LocalDate) null, (-419), (-419));
      Periodo periodo0 = new Periodo((LocalDate) null, (LocalDate) null);
      // Undeclared exception!
      try { 
        casaInteligente0.getFatura(periodo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Periodo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      // Undeclared exception!
      try { 
        casaInteligente0.faturar(localDate0, localDate0, 5.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.existsRooms();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("G*G[/6Z.\"4");
      casaInteligente0.escolherDivisao(scanner0);
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      comercializador0.change();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.setComercializador(comercializador0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      casaInteligente0.setNome("=t");
      casaInteligente0.toString();
      casaInteligente0.getFaturas();
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      casaInteligente0.conteudo();
      casaInteligente0.addToRoom("", " e:K}nAF^}bvmQ{4<K");
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      zoneOffset0.equals(localDate0);
      casaInteligente1.faturar(localDate0, localDate0, 5.0, 1.085722052931806);
      casaInteligente0.toString();
      casaInteligente0.change();
      casaInteligente1.equals("");
      casaInteligente0.conteudo();
      casaInteligente1.setNif((-2736));
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET;
      DatagramChannel datagramChannel0 = DatagramChannel.open((ProtocolFamily) standardProtocolFamily0);
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 3, comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(")", 3, comercializador0);
      // Undeclared exception!
      try { 
        casaInteligente0.equals(casaInteligente1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("&59IDwumBi'!s06", 0, (-1.0));
      CasaInteligente casaInteligente0 = new CasaInteligente("&59IDwumBi'!s06", 0, comercializador0);
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = null;
      try {
        casaInteligente1 = new CasaInteligente(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.setComercializador(comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("C[zV^", (-1750), (-1750), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1750), comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertEquals((-1), casaInteligente1.getNif());
      assertFalse(boolean0);
      assertEquals((-1750), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente1.getNome());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(";# )E", 3, comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente1);
      assertTrue(boolean0);
      assertEquals(3, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(";# )E", 3, comercializador0);
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(3, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(";# )E", 3, comercializador0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertEquals(3, casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 0.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.change();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.faturar((LocalDate) null, (LocalDate) null, (-419), (-419));
      Fatura fatura0 = casaInteligente0.getFatura((Periodo) null);
      assertEquals((-419), casaInteligente0.getNif());
      assertNull(fatura0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 318, 318, 0.0, 0.0);
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.addAllDevices(map0);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Integer integer0 = new Integer(3);
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = Comercializador.parse("", mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-271), comercializador0);
      hashMap0.put(integer0, casaInteligente0);
      Scanner scanner0 = new Scanner("}HM*O>");
      // Undeclared exception!
      try { 
        CasaInteligente.escolherCasa(hashMap0, scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"}HM*O>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Scanner scanner0 = new Scanner("| -> Escreve o nif da casa que queres              |");
      CasaInteligente casaInteligente0 = CasaInteligente.escolherCasa(hashMap0, scanner0);
      assertNull(casaInteligente0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Integer integer0 = new Integer(1800);
      hashMap0.put(integer0, casaInteligente0);
      Scanner scanner0 = new Scanner("d7HSh2");
      // Undeclared exception!
      try { 
        CasaInteligente.escolherCasa(hashMap0, scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.saltarParaData((LocalDate) null, (LocalDate) null);
      assertEquals((-419), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0);
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      SmartCamera smartCamera0 = new SmartCamera();
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.saltarParaData(localDate0, localDate0);
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 318, 318, 0.0, 0.0);
      casaInteligente0.addDevice(smartCamera0);
      // Undeclared exception!
      try { 
        casaInteligente0.precoPorDia();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("'-,tOwwGh-<B", "'-,tOwwGh-<B");
      boolean boolean0 = casaInteligente0.roomHasDevice("'-,tOwwGh-<B", "VwKZ\"'_!wo");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("'-,tOwwGh-<B", "'-,tOwwGh-<B");
      boolean boolean0 = casaInteligente0.roomHasDevice("'-,tOwwGh-<B", "'-,tOwwGh-<B");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.addRoom("8)8sioJMyqiTnr[+mMDw");
      boolean boolean0 = casaInteligente0.roomHasDevice("8)8sioJMyqiTnr[+mMDw", "8)8sioJMyqiTnr[+mMDw");
      assertFalse(boolean0);
      assertEquals((-419), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.roomHasDevice("i+<C8M0yn/,", "i+<C8M0yn/,");
      assertEquals((-1), casaInteligente0.getNif());
      assertFalse(boolean0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.addToRoom("", " e:K}nAF^}bvmQ{4<K");
      casaInteligente0.addToRoom("", "!smU:");
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.addRoom("8)8sioJMyqiTnr[+mMDw");
      boolean boolean0 = casaInteligente0.hasRoom("8)8sioJMyqiTnr[+mMDw");
      assertEquals((-419), casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.hasRoom("^UBIhqyhgwfe]'=");
      assertFalse(boolean0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      boolean boolean0 = casaInteligente0.existsRooms();
      assertEquals(0, casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      assertFalse(casaInteligente0.existsRooms());
      
      casaInteligente0.addRoom("8)8sioJMyqiTnr[+mMDw");
      boolean boolean0 = casaInteligente0.existsRooms();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      casaInteligente0.addRoom("8)8sioJMyqiTnr[+mMDw");
      String string0 = casaInteligente0.conteudo();
      assertEquals("Divisao: 8)8sioJMyqiTnr[+mMDw\n", string0);
      assertEquals((-419), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.listarDispositivos();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("'-,tOwwGh-<B", "'-,tOwwGh-<B");
      casaInteligente0.setAllOn("'-,tOwwGh-<B", false);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setAllOn("", false);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("G*G[/6Z.\"4");
      casaInteligente0.addRoom("G*G[/6Z.\"4");
      String string0 = casaInteligente0.escolherDivisao(scanner0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals("G*G[/6Z.\"4", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      SmartCamera smartCamera0 = new SmartCamera();
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.setAllOn(false);
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setOn("^UBIhqyhgwfe]'=", false);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("+-------------------------------------------------------------------------------------------+\n", (-419), comercializador0);
      boolean boolean0 = casaInteligente0.existsDevice("| -> Escreva o nome da divisao que quer            |");
      assertEquals((-419), casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 318, 318, 0.0, 0.0);
      casaInteligente0.addDevice(smartCamera0);
      casaInteligente0.listarDispositivos();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("`", 621, comercializador0);
      Map<String, List<String>> map0 = casaInteligente0.getLocations();
      casaInteligente0.setLocations(map0);
      assertEquals(621, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      casaInteligente0.faturar(localDate0, localDate0, 5.0, 1.085722052931806);
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      Fatura fatura0 = casaInteligente0.getFatura(periodo0);
      assertEquals(0, casaInteligente0.getNif());
      assertNotNull(fatura0);
      assertEquals(1.085722052931806, fatura0.getCusto(), 0.01);
      assertEquals(5.0, fatura0.getConsumo(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("`", 621, comercializador0);
      // Undeclared exception!
      try { 
        casaInteligente0.setFaturas((List<Fatura>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 1.085722052931806, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      int int0 = casaInteligente0.getNif();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDeviceOn("R}M}}|4**ZW\"/*~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("m$W1N`G$NcXW!}", 0, comercializador0);
      casaInteligente0.getComercializador();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, "| -> Escreva o nome da divisao que quer            |");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", 0, 0.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 0, comercializador0);
      casaInteligente0.getNome();
      assertEquals(0, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }
}
