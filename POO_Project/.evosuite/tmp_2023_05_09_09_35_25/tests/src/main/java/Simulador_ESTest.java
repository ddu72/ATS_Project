/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:38:28 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.PipedInputStream;
import java.net.ProtocolFamily;
import java.net.StandardProtocolFamily;
import java.nio.CharBuffer;
import java.nio.channels.DatagramChannel;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.nio.file.Path;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.main.java.CasaInteligente;
import src.main.java.Comercializador;
import src.main.java.Periodo;
import src.main.java.Simulador;
import src.main.java.SmartCamera;
import src.main.java.SmartDevice;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Simulador_ESTest extends Simulador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      MockRandom mockRandom0 = new MockRandom((-1726L));
      Comercializador comercializador0 = new Comercializador("| 1. Avancar X dias                                |", 1001.2442783879217, 1, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("| 1. Avancar X dias                                |", 1, comercializador0);
      simulador0.addCasa(casaInteligente0);
      simulador0.saltarDias(3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = simulador0.getCasa("1");
      assertNull(casaInteligente0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.createStatusFile("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Simulador simulador0 = Simulador.construirSimulador("");
      assertNull(simulador0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      simulador0.addPeriodo(periodo0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 1, 1, 1);
      simulador0.addDispositivo(smartCamera0);
      Map<String, SmartDevice> map0 = simulador0.getDispositivos();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      LocalDate localDate0 = simulador0.getData();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Comercializador comercializador0 = new Comercializador();
      simulador0.addComercializador(comercializador0);
      Map<String, Comercializador> map0 = simulador0.getComercializadores();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.startInterface((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.put("$q", (SmartDevice) null);
      // Undeclared exception!
      try { 
        simulador0.setDispositivos(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      hashMap0.put("| -> Inseriu uma data invalida                     |", (Comercializador) null);
      // Undeclared exception!
      try { 
        simulador0.setComercializadores(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.setCasasInteligentes((Map<Integer, CasaInteligente>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.saltarDias((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Scanner scanner0 = new Scanner("|m+[IJ");
      Simulador simulador0 = new Simulador(true);
      simulador0.mudarValoresDeComercializador(scanner0);
      // Undeclared exception!
      try { 
        simulador0.mudarValoresDeComercializador(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.mudarValoresDeComercializador((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Comercializador", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa((CasaInteligente) null, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Comercializador", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("", (-2008610465), 350.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-2008610465), comercializador0);
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 813, (Comercializador) null);
      Scanner scanner0 = new Scanner("xL&ra");
      simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, scanner0);
      // Undeclared exception!
      try { 
        simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Scanner scanner0 = new Scanner(mockFileInputStream0);
      // Undeclared exception!
      try { 
        simulador0.gerirComercializadores(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.gerirCasas((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      String string0 = "M!a$6YlD80k?|\\*?LH";
      MockRandom mockRandom0 = new MockRandom((-3649));
      Comercializador comercializador0 = new Comercializador("src.main.java.CasaInteligente", (-3649), (-17.08415207065475), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("src.main.java.CasaInteligente", (-3649), comercializador0);
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      DatagramChannel datagramChannel1 = datagramChannel0.disconnect();
      Scanner scanner0 = new Scanner(datagramChannel1);
      // Undeclared exception!
      try { 
        simulador0.gerirCasa(casaInteligente0, scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Scanner scanner0 = new Scanner("D");
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        simulador0.gerirCasa(casaInteligente0, scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        simulador0.faseInicial((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("$q");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.faseInicial(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      MockFile mockFile0 = new MockFile("Y5YlT()?BDIig");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      CasaInteligente casaInteligente0 = new CasaInteligente("", 813, (Comercializador) null);
      Scanner scanner0 = new Scanner("xL&ra");
      simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, scanner0);
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      simulador0.getComercializadores();
      simulador0.printFaturas();
      simulador0.saltarDias(3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simulador0.getCasasInteligentes();
      Random.setNextRandom(3);
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      Scanner scanner1 = scanner0.useRadix(3);
      Locale locale0 = Locale.CANADA;
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner1);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        simulador0.criarComercializador((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Comercializador comercializador0 = new Comercializador("", (-2095.6385069126), 0.0);
      simulador0.addComercializador(comercializador0);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Scanner scanner0 = new Scanner(charBuffer0);
      simulador0.criarDispositivo(scanner0);
      // Undeclared exception!
      try { 
        simulador0.criarCasa(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        Simulador.construirSimulador((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET6;
      DatagramChannel datagramChannel0 = DatagramChannel.open((ProtocolFamily) standardProtocolFamily0);
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("n#x+[7[%_omUO{", true);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.avancarTempo((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Period period0 = Period.ofDays(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Simulador simulador0 = new Simulador(localDate0);
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      Scanner scanner0 = new Scanner("presets_obj/");
      Comercializador.escolherComercializador(hashMap0, scanner0);
      CasaInteligente casaInteligente0 = new CasaInteligente("presets_obj/", 0, (Comercializador) null);
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa(casaInteligente0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa((CasaInteligente) null, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      // Undeclared exception!
      try { 
        simulador0.adicionarDispositivoACasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.addComercializador((Comercializador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Simulador simulador0 = null;
      try {
        simulador0 = new Simulador((Simulador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      boolean boolean0 = simulador0.gerirEntidades(scanner0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.saltarDias((-5189));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Simulador simulador1 = new Simulador(simulador0);
      assertFalse(simulador1.equals((Object)simulador0));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      String string0 = simulador0.getNextId();
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Comercializador comercializador0 = new Comercializador();
      simulador0.addComercializador(comercializador0);
      simulador0.reset();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      simulador0.printFaturas();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.createStatusFile(")PA}Ua&#Y~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Comercializador comercializador0 = new Comercializador();
      simulador0.addComercializador(comercializador0);
      simulador0.createStatusFile("$q");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Scanner scanner0 = new Scanner("D");
      Simulador simulador0 = new Simulador();
      simulador0.adicionarDivisaoACasa((CasaInteligente) null, scanner0);
      assertEquals(10, scanner0.radix());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Scanner scanner0 = new Scanner("D");
      Simulador simulador0 = new Simulador();
      Comercializador comercializador0 = new Comercializador(".$q", 2586.226070390277, 0.0);
      CasaInteligente casaInteligente0 = new CasaInteligente(".$q", 3053, comercializador0);
      simulador0.adicionarDispositivoACasa(casaInteligente0, scanner0);
      assertEquals(10, scanner0.radix());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Scanner scanner0 = new Scanner("D");
      Simulador simulador0 = new Simulador();
      Comercializador comercializador0 = new Comercializador(".$q", 2586.226070390277, 0.0);
      CasaInteligente casaInteligente0 = new CasaInteligente(".$q", 3053, comercializador0);
      simulador0.adicionarDivisaoACasa(casaInteligente0, scanner0);
      // Undeclared exception!
      try { 
        simulador0.adicionarDispositivoACasa(casaInteligente0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      simulador0.gerirCasas(scanner0);
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Scanner scanner0 = new Scanner(pipedInputStream0);
      // Undeclared exception!
      try { 
        simulador0.gerirCasas(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      boolean boolean0 = simulador0.gerirCasa((CasaInteligente) null, scanner0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      Scanner scanner0 = new Scanner(path0);
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("}+)", (-1693), comercializador0);
      // Undeclared exception!
      try { 
        simulador0.gerirCasa(casaInteligente0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente("", 813, (Comercializador) null);
      Scanner scanner0 = new Scanner("xL&ra");
      Simulador simulador0 = new Simulador();
      simulador0.mudarComercializadorDeCasa(casaInteligente0, scanner0);
      assertEquals("java.util.Scanner[delimiters=\\p{javaWhitespace}+][position=5][match valid=true][need input=false][source closed=true][skipped=false][group separator=\\x{2c}][decimal separator=\\x{2e}][positive prefix=][negative prefix=\\Q-\\E][positive suffix=][negative suffix=][NaN string=\\Q\uFFFD\\E][infinity string=\\Q\u221E\\E]", scanner0.toString());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      simulador0.mudarComercializadorDeCasa(scanner0);
      assertEquals("java.util.Scanner[delimiters=\\p{javaWhitespace}+][position=0][match valid=false][need input=false][source closed=false][skipped=false][group separator=\\x{2c}][decimal separator=\\x{2e}][positive prefix=][negative prefix=\\Q-\\E][positive suffix=][negative suffix=][NaN string=\\Q\uFFFD\\E][infinity string=\\Q\u221E\\E]", scanner0.toString());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      simulador0.criarDispositivo(scanner0);
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      simulador0.criarCasa(scanner0);
      assertEquals("java.util.Scanner[delimiters=\\p{javaWhitespace}+][position=0][match valid=false][need input=false][source closed=false][skipped=false][group separator=\\x{2c}][decimal separator=\\x{2e}][positive prefix=][negative prefix=\\Q-\\E][positive suffix=][negative suffix=][NaN string=\\Q\uFFFD\\E][infinity string=\\Q\u221E\\E]", scanner0.toString());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Comercializador comercializador0 = new Comercializador("", (-2095.6385069126), 0.0);
      simulador0.addComercializador(comercializador0);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Scanner scanner0 = new Scanner(charBuffer0);
      // Undeclared exception!
      try { 
        simulador0.criarCasa(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 1, 1, 1);
      simulador0.addDispositivo(smartCamera0);
      simulador0.listarDispositivos();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.listarCasas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.listarCasas();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      simulador0.listarComercializadores();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Scanner scanner0 = new Scanner("D");
      Simulador simulador0 = new Simulador();
      simulador0.gerirComercializadores(scanner0);
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.gerirComercializadores((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("1");
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|m+[IJ");
      simulador0.avancarTempo(scanner0);
      assertEquals(10, scanner0.radix());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|mS[Iy");
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("$q");
      // Undeclared exception!
      try { 
        simulador0.faseInicial(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.saltarDias(3894);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Simulador simulador0 = Simulador.construirSimulador("                        |");
      assertNull(simulador0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.createStatusFile("u");
      Simulador simulador1 = Simulador.construirSimulador("u");
      assertNull(simulador1);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      LocalDate localDate0 = simulador0.getData();
      assertNotNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      LocalDate localDate0 = MockLocalDate.now();
      simulador0.saltarDias(localDate0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Comercializador comercializador0 = new Comercializador();
      simulador0.addComercializador(comercializador0);
      simulador0.listarComercializadores();
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("4");
      boolean boolean0 = simulador0.gerirEntidades(scanner0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      CasaInteligente casaInteligente0 = simulador0.getCasa("");
      assertNull(casaInteligente0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner("xL&ra");
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      simulador0.setComercializadores(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Simulador simulador1 = simulador0.clone();
      assertNotSame(simulador1, simulador0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SmartDevice smartDevice0 = simulador0.getDispositivo("q//,?1'FB&\"");
      assertNull(smartDevice0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.addDispositivo((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      simulador0.setCasasInteligentes(hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Map<String, SmartDevice> map0 = simulador0.getDispositivos();
      simulador0.setDispositivos(map0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Comercializador comercializador0 = simulador0.getComercializador("6b*[Qk8[T");
      assertNull(comercializador0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.addPeriodo((Periodo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        simulador0.addCasa((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Simulador", e);
      }
  }
}
