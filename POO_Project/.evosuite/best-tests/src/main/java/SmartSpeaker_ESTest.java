/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:43:52 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import src.main.java.SmartDevice;
import src.main.java.SmartSpeaker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartSpeaker_ESTest extends SmartSpeaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker1.volumeUp();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(5, smartSpeaker1.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartDevice_Modo0, 604, (String) null, (String) null, 604);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertFalse(boolean0);
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(100, smartSpeaker1.getVolume());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals(604.0, smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume(0);
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals("N/A", smartSpeaker0.getMarca());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume(100);
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      int int0 = smartSpeaker0.getVolume();
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 3022, (String) null, (String) null);
      smartSpeaker0.getRadio();
      assertEquals(5.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, (String) null, "");
      String string0 = smartSpeaker0.getRadio();
      assertNotNull(string0);
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1489, "Co~b<X\"c/@", "Co~b<X\"c/@");
      smartSpeaker0.getMarca();
      assertEquals(5.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1198, "", "", 1198);
      smartSpeaker0.getMarca();
      assertEquals(100, smartSpeaker0.getVolume());
      assertEquals(1198.0, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1489, "Co~b<X\"c/@", "Co~b<X\"c/@");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(5.5, smartSpeaker1.getConsumoDiario(), 0.01);
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setCustoInstalacao((-1018));
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals("N/A", smartSpeaker1.getRadio());
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker1.getMarca());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, (String) null, (String) null, 0);
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals(0.0, smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals("N/A", smartSpeaker1.getMarca());
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker1.getRadio());
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartSpeaker.parse("w,USVg", mockRandom0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"w\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartSpeaker.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartSpeaker.parse("8", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setMarca((String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      // Undeclared exception!
      try { 
        smartSpeaker0.equals(smartSpeaker1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Scanner scanner0 = new Scanner("");
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("(O>");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Scanner scanner0 = new Scanner("Coluna, id: N/A, OFF, 0");
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" id: N/A\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Scanner scanner0 = new Scanner("Coluna, id: , OFF, 1");
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker((SmartSpeaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1, "", "");
      smartSpeaker0.calcularConsumoDiario();
      assertEquals(0.55, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      String string0 = smartSpeaker0.getRadio();
      assertEquals("N/A", string0);
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, (String) null, (String) null, 0);
      smartSpeaker0.getMarca();
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals(0.0, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      int int0 = smartSpeaker0.getVolume();
      assertEquals(4, int0);
      assertEquals(0.7, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setMarca((String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
      assertEquals("N/A", smartSpeaker1.getRadio());
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker1.getMarca());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertTrue(boolean0);
      assertEquals("N/A", smartSpeaker1.getRadio());
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker1.getMarca());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker0.setID("Coluna, id: , OFF, 4");
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(0.7, smartSpeaker1.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals(4, smartSpeaker0.getVolume());
      assertEquals(4, smartSpeaker1.getVolume());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals(0.7, smartSpeaker0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals("N/A", smartSpeaker1.getRadio());
      assertEquals("N/A", smartSpeaker1.getMarca());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartDevice_Modo0, 100, "K{J\"_d", "iND?^qH)i", 0);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("K{J\"_d", smartSpeaker1.getMarca());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(100, smartSpeaker1.getVolume());
      assertFalse(boolean0);
      assertEquals("iND?^qH)i", smartSpeaker1.getRadio());
      assertEquals(0.0, smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      boolean boolean0 = smartSpeaker0.equals("(O>");
      assertEquals(0.7, smartSpeaker0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Scanner scanner0 = new Scanner("OFF");
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("src.main.java.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Scanner scanner0 = new Scanner("| -> Exemplo: ON,73,JBL,MEGAHITS\t\t\t\t   |");
      SmartSpeaker smartSpeaker0 = SmartSpeaker.criarSmartSpeaker(scanner0);
      assertEquals(4.15, smartSpeaker0.getConsumoDiario(), 0.01);
      assertFalse(smartSpeaker0.isOn());
      assertEquals("JBL", smartSpeaker0.getMarca());
      assertEquals("MEGAHITS\t\t\t\t   |", smartSpeaker0.getRadio());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1, "", "");
      assertEquals(1, smartSpeaker0.getVolume());
      
      smartSpeaker0.volumeDown();
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume(604);
      smartSpeaker0.volumeUp();
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-282), "u/aEvK[+>0", "~%^5kj86", (-1372.4078692));
      smartSpeaker0.volumeDown();
      assertEquals("u/aEvK[+>0", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals((-1372.4078692), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals("~%^5kj86", smartSpeaker0.getRadio());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 993, "N/A", (String) null, 5.0);
      boolean boolean0 = smartSpeaker0.equals((Object) null);
      assertEquals(5.0, smartSpeaker0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (byte) (-44), "I5HiF]I=s'j", (String) null);
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      String string0 = smartSpeaker0.toString();
      assertEquals("Coluna, id: , OFF, 4", string0);
      assertEquals(0.7, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      smartSpeaker0.setRadio((String) null);
      assertEquals(0.7, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume((-3285));
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 4, (String) null, (String) null);
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker0.volumeDown();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(3, smartSpeaker0.getVolume());
      assertFalse(boolean0);
  }
}
