/*
 * This file was automatically generated by EvoSuite
 * Tue May 09 08:49:24 GMT 2023
 */

package src.main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.nio.file.Path;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import src.main.java.Programa;
import src.main.java.Simulador;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Programa_ESTest extends Programa_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Scanner scanner0 = new Scanner("PW^~x'P%q2By6QH>k");
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime0 = MockLocalDateTime.ofEpochSecond((-1594L), 0, zoneOffset0);
      LocalDate localDate0 = MockLocalDate.from(localDateTime0);
      Simulador simulador0 = new Simulador(localDate0);
      Programa.guardarEstadoAtual(simulador0, scanner0);
      assertEquals(10, scanner0.radix());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Programa.guardarEstadoAtual(simulador0, "1");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Programa.guardarEstadoAtual((Simulador) null, "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        Programa.guardarEstadoAtual(simulador0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Programa", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        Programa.guardarEstadoAtual(simulador0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      Scanner scanner0 = new Scanner(path0);
      // Undeclared exception!
      try { 
        Programa.escolherFicheiro("", scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        Programa.escolherFicheiro("", scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Scanner scanner0 = new Scanner("+--------------------------------------------------------------------------------------+");
      // Undeclared exception!
      try { 
        Programa.escolherFicheiro("+--------------------------------------------------------------------------------------+", scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Programa", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Scanner scanner0 = new Scanner("!V1bF+hD!}ih`3");
      scanner0.close();
      // Undeclared exception!
      try { 
        Programa.escolherFicheiro("", scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Scanner scanner0 = new Scanner("/");
      String string0 = Programa.escolherFicheiro("/", scanner0);
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SystemInUtil.addInputLine("3");
      // Undeclared exception!
      try { 
        Programa.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SystemInUtil.addInputLine("1");
      // Undeclared exception!
      try { 
        Programa.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.main.java.Programa", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SystemInUtil.addInputLine("D");
      Programa.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      File file0 = MockFile.createTempFile(" (nif: ", (String) null);
      MockFileReader mockFileReader0 = new MockFileReader(file0);
      Scanner scanner0 = new Scanner(mockFileReader0);
      // Undeclared exception!
      try { 
        Programa.guardarEstadoAtual(simulador0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Programa programa0 = new Programa();
  }
}
