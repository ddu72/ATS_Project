/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 21:02:00 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.SequenceInputStream;
import java.nio.channels.DatagramChannel;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.util.Enumeration;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import smarthouse.SmartDevice;
import smarthouse.SmartSpeaker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SmartSpeaker_ESTest extends SmartSpeaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      smartSpeaker1.setVolume(100);
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertEquals(100, smartSpeaker1.getVolume());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setCustoInstalacao(745.49867776806);
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartDevice_Modo0, 6, "%", "%", 6);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(6, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals(6.0, smartSpeaker1.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals("N/A", smartSpeaker0.getMarca());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 2048739556, "", (String) null, 2048739556);
      smartSpeaker0.volumeDown();
      assertEquals(99, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume(0);
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals("N/A", smartSpeaker0.getRadio());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.volumeUp();
      int int0 = smartSpeaker0.getVolume();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 2048739556, "", (String) null, 2048739556);
      String string0 = smartSpeaker0.getRadio();
      assertEquals(2.048739556E9, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(100, smartSpeaker0.getVolume());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1988062302), "", "", (-1988062302));
      smartSpeaker0.getRadio();
      assertEquals((-1.988062302E9), smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1567), (String) null, (String) null);
      smartSpeaker0.getMarca();
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1162), (String) null, (String) null, (-1162));
      smartSpeaker0.setCustoInstalacao((-1162));
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals((-1162.0), smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-5153), "8", (String) null, 0.0);
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals(0.0, smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartSpeaker.parse("?!r Bw:b\\aJ&", mockRandom0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"?!r Bw:b\\aJ&\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartSpeaker.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartSpeaker.parse("7", (Random) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Scanner scanner0 = new Scanner(sequenceInputStream0);
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("F");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Scanner scanner0 = new Scanner("Kwh, Custo: ");
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" Custo: \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Scanner scanner0 = new Scanner("+>");
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = null;
      try {
        smartSpeaker0 = new SmartSpeaker((SmartSpeaker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      int int0 = smartSpeaker0.getVolume();
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertEquals("N/A", smartSpeaker0.getRadio());
      
      smartSpeaker0.setRadio("?Q7Gg'^WM-y@+}fe");
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertTrue(smartSpeaker0.equals((Object)smartSpeaker1));
      assertTrue(boolean0);
      assertEquals("N/A", smartSpeaker1.getMarca());
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker1.getRadio());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      assertEquals("N/A", smartSpeaker0.getMarca());
      
      smartSpeaker0.setMarca("rI`");
      SmartSpeaker smartSpeaker1 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-513), (String) null, "Insere aqui a tua resposta: ", (-513));
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      // Undeclared exception!
      try { 
        smartSpeaker0.equals(smartSpeaker1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      
      smartSpeaker1.setID("Coluna, id: N/A, OFF, 0");
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartDevice_Modo0, 100, "I`", "| -> Escolhe o id do dispositivo que queres        |");
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals("| -> Escolhe o id do dispositivo que queres        |", smartSpeaker1.getRadio());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals("I`", smartSpeaker1.getMarca());
      assertEquals(5.5, smartSpeaker1.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartDevice_Modo0, 2289, ".r]", ".r]", 1600);
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker1);
      assertFalse(boolean0);
      assertEquals(1600.0, smartSpeaker1.getConsumoDiario(), 0.01);
      assertEquals(100, smartSpeaker1.getVolume());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getMarca());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      boolean boolean0 = smartSpeaker0.equals("I`");
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertFalse(boolean0);
      assertEquals(0, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-513), (String) null, "Insere aqui a tua resposta: ", (-513));
      boolean boolean0 = smartSpeaker0.equals(smartSpeaker0);
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals((-513.0), smartSpeaker0.getConsumoDiario(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartSpeaker smartSpeaker1 = new SmartSpeaker(smartSpeaker0);
      smartSpeaker0.setVolume(100);
      boolean boolean0 = smartSpeaker1.equals(smartSpeaker0);
      assertFalse(boolean0);
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Scanner scanner0 = new Scanner("OFF");
      // Undeclared exception!
      try { 
        SmartSpeaker.criarSmartSpeaker(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartSpeaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.volumeUp();
      assertEquals(1, smartSpeaker0.getVolume());
      
      smartSpeaker0.volumeDown();
      assertEquals("N/A", smartSpeaker0.getMarca());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.volumeDown();
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals("N/A", smartSpeaker0.getMarca());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1162), (String) null, (String) null, (-1162));
      smartSpeaker0.volumeUp();
      smartSpeaker0.clone();
      assertEquals(1, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.setVolume(1600);
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1162), (String) null, (String) null, (-1162));
      smartSpeaker0.setVolume((-1162));
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals((-1162.0), smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, "", "=X<2H,}4<P?", 0);
      String string0 = smartSpeaker0.getMarca();
      assertEquals("=X<2H,}4<P?", smartSpeaker0.getRadio());
      assertEquals(0.0, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Scanner scanner0 = new Scanner("| -> Exemplo: ON,73,JBL,MEGAHITS\t\t\t\t   |");
      SmartSpeaker smartSpeaker0 = SmartSpeaker.criarSmartSpeaker(scanner0);
      boolean boolean0 = smartSpeaker0.equals((Object) null);
      assertEquals("MEGAHITS\t\t\t\t   |", smartSpeaker0.getRadio());
      assertFalse(boolean0);
      assertEquals(4.15, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals("JBL", smartSpeaker0.getMarca());
      assertFalse(smartSpeaker0.isOn());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 494, "", ",4SIy-G}4zN_");
      smartSpeaker0.volumeUp();
      assertEquals(5.5, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals("", smartSpeaker0.getMarca());
      assertEquals(",4SIy-G}4zN_", smartSpeaker0.getRadio());
      assertEquals(100, smartSpeaker0.getVolume());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-222), ";1+_Z", ";1+_Z");
      SmartSpeaker smartSpeaker1 = smartSpeaker0.clone();
      assertTrue(smartSpeaker1.equals((Object)smartSpeaker0));
      assertEquals(0, smartSpeaker1.getVolume());
      assertEquals(0.5, smartSpeaker1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-513), (String) null, "Insere aqui a tua resposta: ", (-513));
      String string0 = smartSpeaker0.toString();
      assertEquals("Coluna, id: , ON, 0", string0);
      assertEquals((-513.0), smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-1162), (String) null, (String) null, (-1162));
      smartSpeaker0.calcularConsumoDiario();
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      String string0 = smartSpeaker0.getMarca();
      assertEquals("N/A", smartSpeaker0.getRadio());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      String string0 = smartSpeaker0.getRadio();
      assertEquals("N/A", smartSpeaker0.getMarca());
      assertEquals(0, smartSpeaker0.getVolume());
      assertEquals("N/A", string0);
  }
}
