/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 20:58:29 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.StringReader;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.time.LocalDate;
import java.time.Month;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import smarthouse.CasaInteligente;
import smarthouse.Comercializador;
import smarthouse.Fatura;
import smarthouse.Periodo;
import smarthouse.Simulador;
import smarthouse.SmartBulb;
import smarthouse.SmartCamera;
import smarthouse.SmartDevice;
import smarthouse.SmartSpeaker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class CasaInteligente_ESTest extends CasaInteligente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente0.setNif((-1));
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertEquals((-1), casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      Month month0 = Month.OCTOBER;
      LocalDate localDate0 = MockLocalDate.of(2, month0, 1);
      // Undeclared exception!
      try { 
        casaInteligente0.saltarParaData(localDate0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("]/DDW v4X^$Y", "m^6VHqQNQWp$|UXg?");
      String string0 = casaInteligente0.conteudo();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("Divisao: ]/DDW v4X^$Y\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.setDeviceOn("N/A");
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(",eUN8", (-1346), comercializador0);
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-2391), (-1346), 0.0);
      casaInteligente0.addDevice(smartBulb0);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      casaInteligente0.saltarParaData(localDate0, localDate0);
      assertEquals((-1346), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("w(U}@dF-3Y!J!", (-1.0), 2048739517);
      CasaInteligente casaInteligente0 = new CasaInteligente("w(U}@dF-3Y!J!", 2048739517, comercializador0);
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-8), (-5), (-5), (-1.0));
      smartCamera0.calcularConsumoDiario();
      casaInteligente0.addDevice(smartCamera0);
      double double0 = casaInteligente0.precoPorDia();
      assertEquals((-9.219320455537735E8), double0, 0.01);
      assertEquals(2048739517, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1), comercializador0);
      casaInteligente0.getNome();
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1596L);
      Comercializador comercializador0 = new Comercializador("|&m(C0:g5a\"=NaG/i", (-1415), (-1415), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1415), comercializador0);
      casaInteligente0.getNome();
      assertEquals((-1415), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("<4EA", 0.0, (-3795.979), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      int int0 = casaInteligente0.getNif();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setNif(2147483645);
      int int0 = casaInteligente0.getNif();
      assertEquals(2147483645, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("]/DDW v4X^$Y", "m^6VHqQNQWp$|UXg?");
      casaInteligente0.getLocations();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-3247), comercializador0);
      LocalDate localDate0 = MockLocalDate.now();
      casaInteligente0.faturar(localDate0, localDate0, (-3247), (-1.0));
      casaInteligente0.getFaturas();
      assertEquals((-3247), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("+--------------------------------------------------+\n", 0.0, (-1508L), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("+--------------------------------------------------+\n", (-1501), comercializador0);
      casaInteligente0.getComercializador();
      assertEquals((-1501), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = Comercializador.parse("1RO4T>", mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("1RO4T>", 2, comercializador0);
      casaInteligente0.getComercializador();
      assertEquals(2, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("_2-Bo", (-334), (-334));
      CasaInteligente casaInteligente0 = new CasaInteligente("_2-Bo", (-334), comercializador0);
      casaInteligente0.getComercializador();
      assertEquals((-334), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      Comercializador comercializador0 = new Comercializador((String) null, 0.0, 0.5, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente(",eUN8", (-1346), comercializador0);
      casaInteligente0.addRoom("bnvc");
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals((-1346), casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 2, comercializador0);
      CasaInteligente casaInteligente1 = casaInteligente0.clone();
      assertEquals(2, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setFaturas((List<Fatura>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      // Undeclared exception!
      try { 
        casaInteligente0.precoPorDia();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        CasaInteligente.parse((Simulador) null, "c7~P3P8,yi!O##p;xX");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"yi!O##p;xX\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("CTA'v]K_:_2+l");
      scanner0.close();
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.conteudo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      CasaInteligente casaInteligente1 = null;
      try {
        casaInteligente1 = new CasaInteligente(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      String string0 = casaInteligente0.toString();
      assertEquals("Casa de  (nif: -1768, Fornecedor: N/A (CustoKwh: -1.0000, Fator Impostos: -1.0000))", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      casaInteligente0.setNif((-1973));
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertEquals((-1973), casaInteligente0.getNif());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("N[*n-:S&=|]Cq", (-1768), comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertTrue(casaInteligente1.equals((Object)casaInteligente0));
      
      casaInteligente1.setNome("iZRS:9^ZFoN");
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      boolean boolean0 = casaInteligente0.equals(casaInteligente0);
      assertTrue(boolean0);
      assertEquals((-1768), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb((-2040109463));
      boolean boolean0 = casaInteligente0.equals(smartBulb0);
      assertFalse(boolean0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Comercializador comercializador0 = new Comercializador();
      casaInteligente0.setComercializador(comercializador0);
      casaInteligente0.change();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.change();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      LinkedList<Fatura> linkedList0 = new LinkedList<Fatura>();
      linkedList0.addFirst((Fatura) null);
      casaInteligente0.setFaturas(linkedList0);
      // Undeclared exception!
      try { 
        casaInteligente0.getFatura((Periodo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getFatura((Periodo) null);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      casaInteligente0.addAllDevices(map0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      casaInteligente0.addAllDevices(map0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      Integer integer0 = new Integer(794);
      Comercializador comercializador0 = new Comercializador("}I76=8IYJ[[", 794, (-586.905892069));
      CasaInteligente casaInteligente0 = new CasaInteligente("}I76=8IYJ[[", 794, comercializador0);
      hashMap0.put(integer0, casaInteligente0);
      // Undeclared exception!
      try { 
        CasaInteligente.escolherCasa(hashMap0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("| 3. Listar Dispositivos                           |");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      Scanner scanner0 = new Scanner(bufferedReader0);
      Simulador simulador0 = new Simulador(false);
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      CasaInteligente casaInteligente0 = CasaInteligente.escolherCasa(map0, scanner0);
      assertNull(casaInteligente0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      casaInteligente0.saltarParaData((LocalDate) null, (LocalDate) null);
      assertEquals((-1768), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("w(U}@dF-3Y!J!", (-1.0), 2048739556);
      CasaInteligente casaInteligente0 = new CasaInteligente("w(U}@dF-3Y!J!", 2048739556, comercializador0);
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-8), (-1), (-1), (-1.0));
      casaInteligente0.addDevice(smartCamera0);
      double double0 = casaInteligente0.precoPorDia();
      assertEquals(1.8438656013E9, double0, 0.01);
      assertEquals(2048739556, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador("w(U}@dF-3Y!J!", (-1.0), 2048739556);
      CasaInteligente casaInteligente0 = new CasaInteligente("w(U}@dF-3Y!J!", 2048739556, comercializador0);
      double double0 = casaInteligente0.precoPorDia();
      assertEquals(2048739556, casaInteligente0.getNif());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("]/DDW v4X^$Y", "m^6VHqQNQWp$|UXg?");
      boolean boolean0 = casaInteligente0.roomHasDevice("]/DDW v4X^$Y", "");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("N/A", "N/A");
      boolean boolean0 = casaInteligente0.roomHasDevice("N/A", "N/A");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("| 3. Listar Dispositivos                           |");
      boolean boolean0 = casaInteligente0.roomHasDevice("| 3. Listar Dispositivos                           |", "Divisao: | 3. Listar Dispositivos                           |\n");
      assertFalse(boolean0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.roomHasDevice("N/A", "| 3. Listar Dispositivos                           |");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom((String) null);
      casaInteligente0.addToRoom((String) null, "tiqS_u*say<+Fqao");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("| 3. Listar Dispositivos                           |");
      boolean boolean0 = casaInteligente0.hasRoom("| 3. Listar Dispositivos                           |");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.hasRoom("N/A");
      assertFalse(boolean0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.existsRooms();
      assertEquals((-1), casaInteligente0.getNif());
      assertFalse(boolean0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      assertFalse(casaInteligente0.existsRooms());
      
      casaInteligente0.addToRoom("N/A", "N/A");
      boolean boolean0 = casaInteligente0.existsRooms();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.addToRoom("N/A", "N/A");
      String string0 = casaInteligente0.conteudo();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("Divisao: N/A\nLampada, id: N/A, OFF, Tone: 1, Tamanho: 0.00\n", string0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addRoom("| 3. Listar Dispositivos                           |");
      String string0 = casaInteligente0.conteudo();
      assertEquals("Divisao: | 3. Listar Dispositivos                           |\n", string0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.conteudo();
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, "lt!7r[P|/E5=Fe.Ry", "| -> Escreve o nif da casa que queres              |", 524.0);
      casaInteligente0.addDevice(smartSpeaker0);
      casaInteligente0.listarDispositivos();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("]/DDW v4X^$Y", "m^6VHqQNQWp$|UXg?");
      casaInteligente0.setAllOn("]/DDW v4X^$Y", true);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      casaInteligente0.setAllOn("", false);
      assertEquals((-1768), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.addToRoom("]/DDW v4X^$Y", "m^6VHqQNQWp$|UXg?");
      Scanner scanner0 = new Scanner("]/DDW v4X^$Y");
      String string0 = casaInteligente0.escolherDivisao(scanner0);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("]/DDW v4X^$Y", string0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      StringReader stringReader0 = new StringReader("| 3. Listar Dispositivos                           |");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      Scanner scanner0 = new Scanner(bufferedReader0);
      casaInteligente0.escolherDivisao(scanner0);
      // Undeclared exception!
      try { 
        casaInteligente0.escolherDivisao(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb((byte)121);
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.setAllOn(true);
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      casaInteligente0.setOn("N/A", false);
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, (-1), comercializador0);
      casaInteligente0.setOn("| -> Escreva o nome da divisao que quer            |", false);
      assertEquals((-1), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      SmartBulb smartBulb0 = new SmartBulb();
      casaInteligente0.addDevice(smartBulb0);
      boolean boolean0 = casaInteligente0.existsDevice("N/A");
      assertEquals("N/A", casaInteligente0.getNome());
      assertEquals((-1), casaInteligente0.getNif());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      boolean boolean0 = casaInteligente0.existsDevice("Divisao: | 3. Listar Dispositivos                           |\n");
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", (-1768), comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      boolean boolean0 = casaInteligente1.equals(casaInteligente0);
      assertTrue(boolean0);
      assertEquals((-1768), casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getComercializador();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("`A1TNX&{fKmXFMD", (-1768), comercializador0);
      casaInteligente0.setNome((String) null);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      // Undeclared exception!
      try { 
        casaInteligente1.equals(casaInteligente0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        CasaInteligente.parse(simulador0, "| 3. Listar Dispositivos                           |");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      String string0 = casaInteligente0.getNome();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("<4EA", 0.0, (-3795.979), mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente((String) null, 0, comercializador0);
      casaInteligente0.setComercializador(comercializador0);
      CasaInteligente casaInteligente1 = new CasaInteligente(casaInteligente0);
      assertEquals(0, casaInteligente1.getNif());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      int int0 = casaInteligente0.getNif();
      assertEquals((-1), int0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getLocations();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.getFaturas();
      assertEquals((-1), casaInteligente0.getNif());
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligente0.setLocations((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        casaInteligente0.existsRooms();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.faturar((LocalDate) null, (LocalDate) null, 3291.608, 3291.608);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.addDevice((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Comercializador comercializador0 = new Comercializador();
      CasaInteligente casaInteligente0 = new CasaInteligente("", 2, comercializador0);
      Map<String, SmartDevice> map0 = casaInteligente0.getDevices();
      casaInteligente0.setDevices(map0);
      assertEquals(2, casaInteligente0.getNif());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        casaInteligente0.setDeviceOn("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }
}
