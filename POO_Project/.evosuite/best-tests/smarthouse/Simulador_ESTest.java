/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 20:56:06 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.ProtocolFamily;
import java.net.StandardProtocolFamily;
import java.nio.channels.DatagramChannel;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.time.Clock;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import smarthouse.CasaInteligente;
import smarthouse.Comercializador;
import smarthouse.Periodo;
import smarthouse.Simulador;
import smarthouse.SmartBulb;
import smarthouse.SmartDevice;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Simulador_ESTest extends Simulador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      simulador0.getCasa("3");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("| -> Exemplo: ON,1920,1080,50                                 |");
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.createStatusFile("");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      simulador0.createStatusFile("Input invalido");
      Simulador simulador1 = Simulador.construirSimulador("Input invalido");
      assertNull(simulador1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      boolean boolean0 = simulador0.getFaseInicial();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1988062302), (-1988062302), (-1988062302));
      simulador0.addDispositivo(smartBulb0);
      assertEquals("1", smartBulb0.getID());
      
      simulador0.getDispositivos();
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      simulador0.getData();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      MockRandom mockRandom0 = new MockRandom(0L);
      Comercializador comercializador0 = Comercializador.parse("B2 o8'@", mockRandom0);
      hashMap0.put("B2 o8'@", comercializador0);
      simulador0.setComercializadores(hashMap0);
      simulador0.getComercializador("B2 o8'@");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Simulador simulador1 = simulador0.clone();
      assertFalse(simulador1.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        simulador0.startInterface((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|                    Bem vindo!                    |");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        simulador0.setDispositivos((Map<String, SmartDevice>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.setCasasInteligentes((Map<Integer, CasaInteligente>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.saltarDias((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner("djicM>Co:@$vh_");
      simulador0.gerirCasa((CasaInteligente) null, scanner0);
      // Undeclared exception!
      try { 
        simulador0.mudarValoresDeComercializador(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      // Undeclared exception!
      try { 
        simulador0.mudarValoresDeComercializador((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Comercializador", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      char[] charArray0 = new char[9];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Scanner scanner0 = new Scanner(charArrayReader0);
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.mudarValoresDeComercializador(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Scanner scanner0 = new Scanner(sequenceInputStream0);
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa(casaInteligente0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Comercializador", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      Scanner scanner0 = new Scanner("-");
      // Undeclared exception!
      try { 
        simulador0.mudarComercializadorDeCasa(scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      Scanner scanner0 = new Scanner(pushbackInputStream0);
      // Undeclared exception!
      try { 
        simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.ligarDesligarDispositivoDeCasa((CasaInteligente) null, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      simulador0.createStatusFile("\uFFFD\uFFFD\uFFFD");
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.gerirComercializadores((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.gerirComercializadores(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      PipedReader pipedReader0 = new PipedReader();
      Scanner scanner0 = new Scanner(pipedReader0);
      // Undeclared exception!
      try { 
        simulador0.gerirCasas(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<Integer, CasaInteligente> hashMap0 = new HashMap<Integer, CasaInteligente>();
      simulador0.setCasasInteligentes(hashMap0);
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET;
      DatagramChannel datagramChannel0 = DatagramChannel.open((ProtocolFamily) standardProtocolFamily0);
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        simulador0.gerirCasas(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.gerirCasas((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.gerirCasas(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.gerirCasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.faseInicial((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.faseInicial(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.criarComercializador((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        Simulador.construirSimulador((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      // Undeclared exception!
      try { 
        simulador0.avancarTempo((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa((CasaInteligente) null, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("|                   Bem vindo!                    |");
      scanner0.close();
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa(casaInteligente0, scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Scanner scanner0 = new Scanner("-");
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.adicionarDispositivoACasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        simulador0.addPeriodo((Periodo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      // Undeclared exception!
      try { 
        simulador0.addDispositivo((SmartDevice) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      // Undeclared exception!
      try { 
        simulador0.addComercializador((Comercializador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      // Undeclared exception!
      try { 
        simulador0.addCasa((CasaInteligente) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Simulador simulador0 = null;
      try {
        simulador0 = new Simulador((Simulador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      simulador0.saltarDias((-1878530560));
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Simulador simulador1 = new Simulador(simulador0);
      assertTrue(simulador1.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      MockRandom mockRandom0 = new MockRandom(0L);
      Comercializador comercializador0 = Comercializador.parse("B2 o8'@", mockRandom0);
      hashMap0.put("B2 o8'@", comercializador0);
      simulador0.setComercializadores(hashMap0);
      simulador0.reset();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("| -> Escreve no formato Modo,Tone,Tamanho          |", (-2394), 1.0, mockRandom0);
      CasaInteligente casaInteligente0 = new CasaInteligente("N/A", (-2394), comercializador0);
      simulador0.addCasa(casaInteligente0);
      simulador0.printFaturas();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      LocalDate localDate0 = MockLocalDate.now();
      Periodo periodo0 = new Periodo(localDate0, localDate0);
      simulador0.addPeriodo(periodo0);
      simulador0.addPeriodo(periodo0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.createStatusFile("+---------------------------------------------------------------------------------------+\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = Comercializador.parse("q44}:k'R?wn4^#8?IV", mockRandom0);
      simulador0.addComercializador(comercializador0);
      simulador0.createStatusFile("Input invalido");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("|                   Bem vindo!                    |");
      simulador0.adicionarDivisaoACasa(casaInteligente0, scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner(",");
      simulador0.adicionarDivisaoACasa((CasaInteligente) null, scanner0);
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.adicionarDispositivoACasa(casaInteligente0, scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Scanner scanner0 = new Scanner("| -> Exemplo: ON,1920,1080,50                                 |");
      simulador0.ligarDesligarDispositivoDeCasa(casaInteligente0, scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner("2");
      simulador0.gerirCasas(scanner0);
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("1");
      simulador0.gerirCasas(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      simulador0.gerirCasas(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      Simulador simulador0 = new Simulador(false);
      simulador0.gerirCasas(scanner0);
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner("2");
      // Undeclared exception!
      try { 
        simulador0.gerirCasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Scanner scanner0 = new Scanner("2");
      // Undeclared exception!
      try { 
        simulador0.gerirCasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      simulador0.gerirCasa((CasaInteligente) null, scanner0);
      // Undeclared exception!
      try { 
        simulador0.adicionarDivisaoACasa((CasaInteligente) null, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      Comercializador comercializador0 = new Comercializador("\u0000\u0000\u0000\u0000\u0000e\u0000\u0000\u0000", (-838), (-838));
      CasaInteligente casaInteligente0 = new CasaInteligente("+---------------------------------------------------------------------------------------+\n", 310, comercializador0);
      simulador0.mudarComercializadorDeCasa(casaInteligente0, scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      PipedReader pipedReader0 = new PipedReader();
      Scanner scanner0 = new Scanner(pipedReader0);
      simulador0.mudarComercializadorDeCasa(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("-");
      simulador0.mudarValoresDeComercializador(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("3");
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      Scanner scanner0 = new Scanner("2");
      // Undeclared exception!
      try { 
        simulador0.criarDispositivo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("-");
      simulador0.criarDispositivo(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      PipedReader pipedReader0 = new PipedReader();
      Scanner scanner0 = new Scanner(pipedReader0);
      simulador0.criarCasa(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SmartBulb smartBulb0 = new SmartBulb((-350));
      hashMap0.put("", smartBulb0);
      simulador0.setDispositivos(hashMap0);
      simulador0.listarDispositivos();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.listarCasas();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      MockRandom mockRandom0 = new MockRandom(0L);
      Comercializador comercializador0 = Comercializador.parse("B2 o8'@", mockRandom0);
      hashMap0.put("B2 o8'@", comercializador0);
      simulador0.setComercializadores(hashMap0);
      simulador0.listarComercializadores();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Scanner scanner0 = new Scanner("rRO=Tdk\"_6;t");
      simulador0.gerirComercializadores(scanner0);
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("1");
      simulador0.gerirComercializadores(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("+---------------------------------------------------------------------------------------+\n");
      simulador0.gerirComercializadores(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Scanner scanner0 = new Scanner(sequenceInputStream0);
      // Undeclared exception!
      try { 
        simulador0.gerirComercializadores(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|                    Bem vindo!                    |");
      boolean boolean0 = simulador0.gerirEntidades(scanner0);
      assertTrue(simulador0.getFaseInicial());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("2");
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("1");
      // Undeclared exception!
      try { 
        simulador0.gerirEntidades(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("2");
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("1");
      // Undeclared exception!
      try { 
        simulador0.avancarTempo(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|                    Bem vindo!                    |");
      simulador0.avancarTempo(scanner0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("3");
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("1");
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Scanner scanner0 = new Scanner("|                   Bem vindo!                    |");
      // Undeclared exception!
      try { 
        simulador0.startInterface(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      Scanner scanner0 = new Scanner("3");
      // Undeclared exception!
      try { 
        simulador0.faseInicial(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      HashMap<String, Comercializador> hashMap0 = new HashMap<String, Comercializador>();
      MockRandom mockRandom0 = new MockRandom(0L);
      Comercializador comercializador0 = Comercializador.parse("B2 o8'@", mockRandom0);
      hashMap0.put("B2 o8'@", comercializador0);
      simulador0.setComercializadores(hashMap0);
      simulador0.saltarDias(3);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.saltarDias(2139);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Simulador simulador0 = Simulador.construirSimulador("-");
      assertNull(simulador0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Simulador simulador0 = Simulador.construirSimulador("");
      assertNull(simulador0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Simulador simulador0 = new Simulador((LocalDate) null);
      simulador0.getCasa("T-'AAT\":\"a6HPG#");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      boolean boolean0 = simulador0.getFaseInicial();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Simulador simulador0 = new Simulador(localDate0);
      Simulador simulador1 = simulador0.clone();
      assertTrue(simulador1.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        simulador0.setComercializadores((Map<String, Comercializador>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Simulador", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      LocalDate localDate0 = simulador0.getData();
      simulador0.saltarDias(localDate0);
      assertFalse(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      simulador0.getComercializador("5");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Simulador simulador0 = new Simulador(localDate0);
      Comercializador comercializador0 = new Comercializador("':EcDb1IiU7HOhh9s", 490.9613581302007, 490.9613581302007);
      simulador0.addComercializador(comercializador0);
      simulador0.getComercializadores();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      SmartBulb smartBulb0 = new SmartBulb(2139);
      simulador0.addDispositivo(smartBulb0);
      assertEquals("1", smartBulb0.getID());
      
      simulador0.saltarDias(2139);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Simulador simulador0 = new Simulador(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Scanner scanner0 = new Scanner(sequenceInputStream0);
      // Undeclared exception!
      try { 
        simulador0.criarComercializador(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.getDispositivos();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Simulador simulador0 = new Simulador(localDate0);
      CasaInteligente casaInteligente0 = new CasaInteligente();
      simulador0.addCasa(casaInteligente0);
      // Undeclared exception!
      try { 
        simulador0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.CasaInteligente", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      String string0 = simulador0.getNextId();
      assertEquals("1", string0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Simulador simulador0 = new Simulador(true);
      simulador0.getDispositivo("");
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      simulador0.getComercializadores();
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Simulador simulador0 = new Simulador();
      Map<Integer, CasaInteligente> map0 = simulador0.getCasasInteligentes();
      simulador0.setCasasInteligentes(map0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Simulador simulador0 = new Simulador(localDate0);
      assertTrue(simulador0.getFaseInicial());
      
      simulador0.setFaseInicial(false);
      assertFalse(simulador0.getFaseInicial());
  }
}
