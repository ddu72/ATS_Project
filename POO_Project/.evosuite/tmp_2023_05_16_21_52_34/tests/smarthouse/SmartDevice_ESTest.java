/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 21:04:28 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.net.ProtocolFamily;
import java.net.StandardProtocolFamily;
import java.nio.channels.DatagramChannel;
import java.nio.channels.NotYetConnectedException;
import java.time.Clock;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import smarthouse.Comercializador;
import smarthouse.SmartBulb;
import smarthouse.SmartCamera;
import smarthouse.SmartDevice;
import smarthouse.SmartSpeaker;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SmartDevice_ESTest extends SmartDevice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1988062296), (-1.0));
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(150.0, smartBulb1.getCustoInstalacao(), 0.01);
      
      smartBulb1.setCustoInstalacao(0.0);
      boolean boolean0 = smartBulb1.equals(smartBulb0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0, 0);
      LocalDate localDate0 = MockLocalDate.now();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate1 = MockLocalDate.now(clock0);
      // Undeclared exception!
      try { 
        smartBulb0.custoAte((Comercializador) null, localDate0, localDate1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2003));
      smartBulb0.calcularConsumoDiario();
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals((-5007.0), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      String string0 = smartBulb0.toString();
      assertEquals("Lampada, id: N/A, OFF, Tone: 1, Tamanho: 0.00", string0);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2003));
      smartBulb0.setID("4vNQ^9G`mS");
      smartBulb0.getID();
      assertEquals((-5007.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 2044.0);
      double double0 = smartBulb0.getCustoInstalacao();
      assertEquals(150.0, double0, 0.01);
      assertEquals(0.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-1), (-1), 0.1, 2002.14957);
      smartCamera0.setCustoInstalacao((-1));
      double double0 = smartCamera0.getCustoInstalacao();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 6, (String) null, "");
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(0.8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-325), (-325), (-325));
      double double0 = smartBulb0.getConsumoDiario();
      assertEquals((-325.0), double0, 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 0, 0, (-1.0));
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.put("3tz)+^@w", smartCamera0);
      Scanner scanner0 = new Scanner("3tz)+^@w");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertNotNull(smartDevice0);
      assertEquals(700.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartDevice0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 0, 0, (-1.0));
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      smartCamera0.setCustoInstalacao((-1.0));
      hashMap0.put("3tz)+^@w", smartCamera0);
      assertEquals((-1.0), smartCamera0.getCustoInstalacao(), 0.01);
      
      Scanner scanner0 = new Scanner("3tz)+^@w");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals((-1.0), smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 0, 0, 0, 0);
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.put("3tz)+^@w", smartCamera0);
      Scanner scanner0 = new Scanner("3tz)+^@w");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertNotNull(smartDevice0);
      assertEquals(0.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, smartDevice0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 0, 0, (-1.0));
      smartCamera0.setConsumoDiario((-218.27909445265738));
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.put("3tz)+^@w", smartCamera0);
      assertEquals((-218.27909445265738), smartCamera0.getConsumoDiario(), 0.01);
      
      Scanner scanner0 = new Scanner("3tz)+^@w");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals(700.0, smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-325), (-325), (-325));
      LocalDate localDate0 = MockLocalDate.now();
      LocalDate localDate1 = MockLocalDate.ofEpochDay(0L);
      double double0 = smartBulb0.consumoAte(localDate1, localDate0);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals((-4225.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0, 0);
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertTrue(smartDevice0.equals((Object)smartBulb0));
      assertEquals(0.0, smartDevice0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertTrue(smartDevice0.isOn());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2003));
      smartBulb0.setTone((-2003));
      smartBulb0.calcularConsumoDiario();
      smartBulb0.clone();
      assertEquals(0.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      SmartDevice smartDevice0 = smartSpeaker0.clone();
      assertEquals((-1.0), smartDevice0.getConsumoDiario(), 0.01);
      assertTrue(smartDevice0.equals((Object)smartSpeaker0));
      assertEquals("N/A", smartDevice0.getID());
      assertEquals(0.0, smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      StandardProtocolFamily standardProtocolFamily0 = StandardProtocolFamily.INET6;
      DatagramChannel datagramChannel0 = DatagramChannel.open((ProtocolFamily) standardProtocolFamily0);
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      StringReader stringReader0 = new StringReader("5EC_");
      Scanner scanner0 = new Scanner(stringReader0);
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-123), 1562);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)108);
      Scanner scanner0 = new Scanner(bufferedInputStream0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1770), (-1770), (-1770));
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        smartBulb0.consumoAte(localDate0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-1), (-1), 0.1, 2002.14957);
      double double0 = smartCamera0.getCustoInstalacao();
      assertEquals(0.0, double0, 0.01);
      assertEquals(2002.14957, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2003));
      smartBulb0.getID();
      assertEquals((-5007.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-37), (String) null, "*?-g&duw5/IDnFqxI", 0.0);
      smartSpeaker0.getModo();
      assertEquals(0.0, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2003));
      smartBulb0.turnOn();
      assertEquals((-5007.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-746), "Invalid lambda deserialization", "ON", 0.0);
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.turnOff();
      assertEquals("N/A", smartSpeaker0.getID());
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.change();
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("3tz)+^@w");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertNull(smartDevice0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      Scanner scanner0 = new Scanner(pushbackInputStream0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartCamera smartCamera1 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertTrue(boolean0);
      assertEquals(700.0, smartCamera1.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera1 = new SmartCamera(smartDevice_Modo0, (-1968526675), (-1968526675), 1, (-1968526675));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, smartCamera1.getCustoInstalacao(), 0.01);
      assertEquals((-1.968526675E9), smartCamera1.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-2054114791), (-2054114791), (-2054114791), (-2054114791));
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      assertTrue(smartCamera1.equals((Object)smartCamera0));
      
      smartCamera1.setID("y+fx7>vZ:~");
      boolean boolean0 = smartCamera1.equals(smartCamera0);
      assertFalse(smartCamera1.equals((Object)smartCamera0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      boolean boolean0 = smartBulb0.equals(mockFileInputStream0);
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertTrue(boolean0);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-3195), (-3195), (-3195));
      boolean boolean0 = smartBulb0.isOn();
      assertTrue(boolean0);
      assertEquals((-3195.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1231L));
      Comercializador comercializador0 = new Comercializador("| -> Escreve o nome do comercializador que queres  |", (-14), (-1231L));
      double double0 = smartCamera0.custoAte(comercializador0, localDate0, localDate0);
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-325), (-325), (-325));
      LocalDate localDate0 = MockLocalDate.now();
      double double0 = smartBulb0.consumoAte(localDate0, localDate0);
      assertEquals(-0.0, double0, 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, (-663), "", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      double double0 = smartSpeaker0.consumoAte(localDate0, localDate0);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.setCustoInstalacao((-1231L));
      smartCamera0.clone();
      assertEquals((-1231.0), smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera1 = new SmartCamera(smartDevice_Modo0, (-1968526675), 0, (-1968526675));
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(700.0, smartCamera1.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartCamera1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-3195), (-3195), (-3195));
      smartBulb0.setOn(true);
      smartBulb0.change();
      assertEquals((-3195.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertTrue(smartBulb0.isOn());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-325), (-325), (-325));
      LocalDate localDate0 = MockLocalDate.now();
      Comercializador comercializador0 = new Comercializador();
      double double0 = smartBulb0.custoAte(comercializador0, localDate0, localDate0);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      boolean boolean0 = smartBulb0.isOn();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertFalse(boolean0);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-2054114791), (-2054114791), (-2054114791), (-2054114791));
      smartCamera0.setOn(false);
      assertEquals((-2.054114791E9), smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
  }
}
