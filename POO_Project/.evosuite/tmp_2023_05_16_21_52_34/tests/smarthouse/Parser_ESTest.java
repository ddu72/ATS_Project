/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 21:00:26 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.file.NoSuchFileException;
import java.time.Clock;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import smarthouse.CasaInteligente;
import smarthouse.Comercializador;
import smarthouse.Parser;
import smarthouse.Simulador;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parser parser0 = new Parser("| 1. Avancar no tempo                              |");
      parser0.simular((Simulador) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parser parser0 = new Parser((String) null);
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Simulador simulador0 = new Simulador(localDate0);
      // Undeclared exception!
      try { 
        parser0.simular(simulador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Parser parser0 = new Parser(" O\"");
      // Undeclared exception!
      try { 
        parser0.parseLocalDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parser parser0 = new Parser("2");
      // Undeclared exception!
      try { 
        parser0.parseLocalDate("2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parser parser0 = new Parser((String) null);
      // Undeclared exception!
      try { 
        parser0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parser parser0 = new Parser("8QL-SP,%:");
      try { 
        parser0.lerFicheiro("8QL-SP,%:");
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parser parser0 = new Parser("d3Y%e4G /`2p.A\".~");
      // Undeclared exception!
      try { 
        parser0.lerFicheiro((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parser parser0 = new Parser("");
      try { 
        parser0.lerFicheiro("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parser parser0 = new Parser((String) null);
      Comercializador comercializador0 = new Comercializador();
      // Undeclared exception!
      try { 
        parser0.eventoComercializador(comercializador0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parser parser0 = new Parser("| 3. Adicionar divisao a casa                      |");
      CasaInteligente casaInteligente0 = new CasaInteligente();
      // Undeclared exception!
      try { 
        parser0.eventoCasa(casaInteligente0, "JNG'D0nC", (Simulador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parser parser0 = new Parser("");
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Simulador simulador0 = new Simulador();
      Comercializador comercializador0 = new Comercializador("", (-2957.810395417), (-2957.810395417));
      simulador0.addComercializador(comercializador0);
      parser0.eventoCasa(casaInteligente0, "", simulador0);
      assertTrue(simulador0.getFaseInicial());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parser parser0 = new Parser("");
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Simulador simulador0 = new Simulador();
      casaInteligente0.addRoom("");
      // Undeclared exception!
      try { 
        parser0.eventoCasa(casaInteligente0, "", simulador0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Parser parser0 = new Parser("8QL-SP,%:");
      CasaInteligente casaInteligente0 = new CasaInteligente();
      Simulador simulador0 = new Simulador();
      parser0.eventoCasa(casaInteligente0, "8QL-SP,%:", simulador0);
      assertEquals("N/A", casaInteligente0.getNome());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parser parser0 = new Parser("alteraValorCusto");
      // Undeclared exception!
      try { 
        parser0.eventoComercializador((Comercializador) null, "alteraValorCusto");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = new Parser("Divisao");
      Comercializador comercializador0 = new Comercializador();
      // Undeclared exception!
      try { 
        parser0.eventoComercializador(comercializador0, "alteraValorDesconto");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parser parser0 = new Parser("| 1. Avancar no tempo                              |");
      MockRandom mockRandom0 = new MockRandom(0L);
      Comercializador comercializador0 = Comercializador.parse("| 1. Avancar no tempo                              |", mockRandom0);
      parser0.eventoComercializador(comercializador0, "alteraV9lorCusto");
      assertEquals("| 1. Avancar no tempo                              |", comercializador0.getNome());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = new Parser("| 1. Avancar no tempo                              |");
      // Undeclared exception!
      try { 
        parser0.parseLocalDate("| 1. Avancar no tempo                              |");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"| 1\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Parser parser0 = new Parser("| 1. Avancar no tempo                              |");
      Simulador simulador0 = parser0.parse();
      assertNull(simulador0);
  }
}
