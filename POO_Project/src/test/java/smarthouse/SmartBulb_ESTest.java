/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 21:06:56 GMT 2023
 */

package smarthouse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.channels.DatagramChannel;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;
import smarthouse.SmartBulb;
import smarthouse.SmartDevice;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class SmartBulb_ESTest extends SmartBulb_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setTone(2);
      assertEquals(2, smartBulb0.getTone());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(0);
      int int0 = smartBulb0.getTone();
      assertEquals(0.5, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 1, 1, 5116.1956384);
      int int0 = smartBulb0.getTone();
      assertEquals(1, int0);
      assertEquals(5116.1956384, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(1.0, smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2117145021));
      smartBulb0.setTamanho(1129.965547521477);
      double double0 = smartBulb0.getTamanho();
      assertEquals(1129.965547521477, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setTamanho((-708.2801131));
      double double0 = smartBulb0.getTamanho();
      assertEquals((-708.2801131), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 3, 3);
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(8.0, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals(3.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(3, smartBulb1.getTone());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(0);
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(0, smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(0.5, smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setCustoInstalacao((-25.17817269341038));
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(1, smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(3.0, smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-705));
      assertEquals((-1762.0), smartBulb0.getConsumoDiario(), 0.01);
      
      smartBulb0.setConsumoDiario(0.0);
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals((-705), smartBulb1.getTone());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(1, smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(3.0, smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartBulb.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = MockFile.createTempFile("ex[er+a", "ex[er+a");
      MockFileReader mockFileReader0 = new MockFileReader(file0);
      Scanner scanner0 = new Scanner(mockFileReader0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatagramChannel datagramChannel0 = DatagramChannel.open();
      Scanner scanner0 = new Scanner(datagramChannel0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("[Ls~R>KRAyu[+HJS0", "^");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Scanner scanner0 = new Scanner("HFz");
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartBulb smartBulb0 = null;
      try {
        smartBulb0 = new SmartBulb((SmartBulb) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smarthouse.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartBulb smartBulb1 = new SmartBulb(smartBulb0);
      assertEquals(1, smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals(3.0, smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      double double0 = smartBulb0.getTamanho();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.calcularConsumoDiario();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-705));
      int int0 = smartBulb0.getTone();
      assertEquals((-705), int0);
      assertEquals((-1762.0), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBulb.parse("Cold", (Random) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartBulb.parse("Warm", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        SmartBulb.parse("Neutral", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      SmartBulb smartBulb0 = SmartBulb.parse("| -> Escreve no formato Modo,Tone,Tamanho          |", mockRandom0);
      assertNull(smartBulb0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Scanner scanner0 = new Scanner("ON");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("smarthouse.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Scanner scanner0 = new Scanner("Lampada, id: N/A, OFF, Tone: 1, Tamanho: -25.18");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2117145021));
      assertEquals((-2117145021), smartBulb0.getTone());
      
      smartBulb0.setTone((-1988062302));
      assertEquals((-5.292862552E9), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(68);
      smartBulb0.setTone(68);
      assertEquals(2, smartBulb0.getTone());
      assertEquals(170.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(2749);
      assertEquals(2749, smartBulb0.getTone());
      
      smartBulb0.setTone(0);
      assertEquals(6873.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setTamanho((-25.17817269341038));
      smartBulb0.clone();
      assertEquals((-25.17817269341038), smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-1882118386));
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals((-1882118386), smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
      assertEquals((-4.7052959645E9), smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-1882118386));
      String string0 = smartBulb0.toString();
      assertEquals("Lampada, id: , OFF, Tone: -1882118386, Tamanho: 0.00", string0);
      assertEquals((-4.7052959645E9), smartBulb0.getConsumoDiario(), 0.01);
  }
}
