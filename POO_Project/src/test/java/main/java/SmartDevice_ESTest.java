/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 22:20:04 GMT 2023
 */

package main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.time.LocalDate;
import java.time.Month;
import java.util.HashMap;
import java.util.NoSuchElementException;
import java.util.Scanner;
import main.java.Comercializador;
import main.java.SmartBulb;
import main.java.SmartCamera;
import main.java.SmartDevice;
import main.java.SmartSpeaker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartDevice_ESTest extends SmartDevice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-190), (-190), (-190));
      SmartCamera smartCamera1 = new SmartCamera();
      smartCamera0.setCustoInstalacao(1);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(1.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-168), (-168), (-168));
      boolean boolean0 = smartCamera0.equals(smartCamera0);
      assertEquals(0.490516736, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1986458893, "$VALUES", "_O#-`06NxaMI~R");
      LocalDate localDate0 = MockLocalDate.now();
      MockRandom mockRandom0 = new MockRandom();
      Comercializador comercializador0 = new Comercializador("$VALUES", 407.39714, 700.0, mockRandom0);
      // Undeclared exception!
      try { 
        smartSpeaker0.custoAte(comercializador0, localDate0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      smartSpeaker0.calcularConsumoDiario();
      assertEquals(0.5, smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      smartCamera0.toString();
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals((-558.0), smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      String string0 = smartSpeaker0.getID();
      assertEquals("N/A", string0);
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals((-1.0), smartSpeaker0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-740), (-3173.24), (-2451.7232812));
      double double0 = smartBulb0.getCustoInstalacao();
      assertEquals(150.0, double0, 0.01);
      assertEquals((-2451.7232812), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1, "[;psW!M;lKj,f.", "[;psW!M;lKj,f.", 0.0);
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmartSpeaker smartSpeaker0 = new SmartSpeaker();
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals("N/A", smartSpeaker0.getID());
      assertEquals((-1.0), double0, 0.01);
      assertEquals(0.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-1), (-1), (-1));
      HashMap<String, SmartSpeaker> hashMap0 = new HashMap<String, SmartSpeaker>();
      HashMap<String, SmartDevice> hashMap1 = new HashMap<String, SmartDevice>(hashMap0);
      hashMap1.put("?,iq<]fsh|lnmy", smartCamera0);
      Scanner scanner0 = new Scanner("?,iq<]fsh|lnmy");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap1, scanner0);
      assertEquals(0.499999998, smartDevice0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertNotNull(smartDevice0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      hashMap0.putIfAbsent("?,iq<:fth|l$my", smartCamera0);
      Scanner scanner0 = new Scanner("?,iq<:fth|l$my");
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertNotNull(smartDevice0);
      assertEquals(0.5, smartDevice0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartDevice0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("?,iq<:fth|l$my");
      hashMap0.put("?,iq<:fth|l$my", smartBulb0);
      smartBulb0.setConsumoDiario(0);
      assertEquals(0.0, smartBulb0.getConsumoDiario(), 0.01);
      
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals("N/A", smartDevice0.getID());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 100, 100);
      LocalDate localDate0 = MockLocalDate.now();
      Month month0 = Month.AUGUST;
      LocalDate localDate1 = MockLocalDate.of(0, month0, 2);
      double double0 = smartBulb0.consumoAte(localDate0, localDate1);
      assertEquals((-3006.0), double0, 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      smartCamera0.setCustoInstalacao((-558));
      smartCamera0.clone();
      assertEquals((-558.0), smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-347), (-347), 0.0);
      SmartDevice smartDevice0 = smartBulb0.clone();
      assertEquals(150.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, smartDevice0.getConsumoDiario(), 0.01);
      assertTrue(smartDevice0.equals((Object)smartBulb0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-1), (-1), (-1));
      SmartDevice smartDevice0 = smartCamera0.clone();
      assertEquals(0.499999998, smartDevice0.getConsumoDiario(), 0.01);
      assertTrue(smartDevice0.equals((Object)smartCamera0));
      assertEquals(700.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertTrue(smartDevice0.isOn());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("?,iq<:fth|l$my");
      SmartDevice.escolherDispositivo(hashMap0, scanner0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("zKqA?");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      Scanner scanner0 = new Scanner(fileChannel0);
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, scanner0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      // Undeclared exception!
      try { 
        SmartDevice.escolherDispositivo(hashMap0, (Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera((SmartDevice.Modo) null, (-168), (-168), (-168));
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      // Undeclared exception!
      try { 
        smartCamera0.equals(smartCamera1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 2963, 1156.074815);
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        smartBulb0.custoAte((Comercializador) null, localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 640, 640, 640, 640);
      double double0 = smartCamera0.getCustoInstalacao();
      assertEquals(640.0, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-53), (-53), (-1.0));
      smartBulb0.getID();
      assertEquals((-1.0), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.setConsumoDiario((-168.0));
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      Scanner scanner0 = new Scanner("?,iq<:fth|l$my");
      hashMap0.put("?,iq<:fth|l$my", smartBulb0);
      assertEquals((-168.0), smartBulb0.getConsumoDiario(), 0.01);
      
      SmartDevice smartDevice0 = SmartDevice.escolherDispositivo(hashMap0, scanner0);
      assertEquals((-168.0), smartDevice0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-2050342965), (-2050342965), (-2050342965));
      smartCamera0.change();
      assertEquals(5.899021893680912E9, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-187), (-187), (-187));
      SmartCamera smartCamera1 = new SmartCamera(smartCamera0);
      smartCamera1.setCustoInstalacao(1);
      boolean boolean0 = smartCamera0.equals(smartCamera1);
      assertEquals(1.0, smartCamera1.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartBulb smartBulb1 = new SmartBulb(0);
      boolean boolean0 = smartBulb0.equals(smartBulb1);
      assertEquals(150.0, smartBulb1.getCustoInstalacao(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      Object object0 = new Object();
      boolean boolean0 = smartBulb0.equals(object0);
      assertFalse(boolean0);
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 1, 0, 3427.0, 57.0885620749);
      boolean boolean0 = smartCamera0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(57.0885620749, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      smartCamera0.setOn(true);
      SmartDevice smartDevice0 = smartCamera0.clone();
      smartCamera0.change();
      boolean boolean0 = smartCamera0.equals(smartDevice0);
      assertTrue(smartCamera0.isOn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      boolean boolean0 = smartCamera0.isOn();
      assertFalse(boolean0);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals((-558.0), smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      smartCamera0.setOn(true);
      smartCamera0.change();
      boolean boolean0 = smartCamera0.isOn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 0, (-561), 0, 0);
      smartCamera0.setOn(false);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, smartCamera0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 1986458893, "$VALUES", "_O#-`06NxaMI~R");
      LocalDate localDate0 = MockLocalDate.now();
      Comercializador comercializador0 = new Comercializador();
      double double0 = smartSpeaker0.custoAte(comercializador0, localDate0, localDate0);
      assertEquals(-0.0, double0, 0.01);
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-2050342965), (-2050342965), (-2050342965));
      LocalDate localDate0 = MockLocalDate.now();
      double double0 = smartBulb0.custoAte((Comercializador) null, localDate0, localDate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-2.050342965E9), smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(150.0, smartBulb0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-5), 2144184901, 1.0);
      // Undeclared exception!
      try { 
        smartCamera0.consumoAte((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, 1, 0, 3427.0, 57.0885620749);
      LocalDate localDate0 = MockLocalDate.ofYearDay(2, 1);
      double double0 = smartCamera0.consumoAte(localDate0, localDate0);
      assertEquals(57.0885620749, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartCamera0.getCustoInstalacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-168), (-168), (-168));
      smartCamera0.setID("?,iq<:fth|l$my");
      assertEquals(0.490516736, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartSpeaker smartSpeaker0 = new SmartSpeaker(smartDevice_Modo0, 0, "4@mec-7bfUyJeD", "4@mec-7bfUyJeD");
      double double0 = smartSpeaker0.getConsumoDiario();
      assertEquals(350.0, smartSpeaker0.getCustoInstalacao(), 0.01);
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartCamera smartCamera0 = new SmartCamera(smartDevice_Modo0, (-558), (-558), (-558), (-558));
      SmartDevice smartDevice0 = smartCamera0.clone();
      boolean boolean0 = smartCamera0.equals(smartDevice0);
      assertTrue(boolean0);
      assertEquals(0.0, smartDevice0.getCustoInstalacao(), 0.01);
      assertEquals((-558.0), smartDevice0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SmartCamera smartCamera0 = new SmartCamera();
      smartCamera0.getModo();
      assertEquals(0.5, smartCamera0.getConsumoDiario(), 0.01);
      assertEquals(700.0, smartCamera0.getCustoInstalacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.turnOff();
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      smartBulb0.turnOn();
      assertEquals(3.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals("N/A", smartBulb0.getID());
      assertEquals(0.0, smartBulb0.getCustoInstalacao(), 0.01);
  }
}
