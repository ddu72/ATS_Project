/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 22:21:15 GMT 2023
 */

package main.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.Scanner;
import main.java.SmartBulb;
import main.java.SmartDevice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SmartBulb_ESTest extends SmartBulb_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-2148));
      assertEquals((-2148), smartBulb0.getTone());
      
      smartBulb0.setTone(0);
      assertEquals((-5369.5), smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0, 0);
      int int0 = smartBulb0.getTone();
      assertEquals(0, int0);
      assertEquals(0.0, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), 1140.1753917821);
      int int0 = smartBulb0.getTone();
      assertEquals((-1.0), smartBulb0.getTamanho(), 0.01);
      assertEquals((-1), int0);
      assertEquals(1140.1753917821, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb(0);
      double double0 = smartBulb0.getTamanho();
      assertEquals(0.5, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 2545, 1393.55012349403);
      double double0 = smartBulb0.getTamanho();
      assertEquals(1393.55012349403, double0, 0.01);
      assertEquals(6363.0, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 1032, (-330251280));
      smartBulb0.setCustoInstalacao((-330251280));
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(2580.5, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals(1032, smartBulb1.getTone());
      assertEquals((-3.3025128E8), smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.ON;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 0, 0, 0);
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(0, smartBulb1.getTone());
      assertEquals(0.0, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-64), 5778.789802);
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals((-159.5), smartBulb1.getConsumoDiario(), 0.01);
      assertEquals((-64), smartBulb1.getTone());
      assertEquals(5778.789802, smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      try { 
        SmartBulb.parse((String) null, mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Scanner scanner0 = new Scanner("");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SocketChannel socketChannel0 = SocketChannel.open();
      Scanner scanner0 = new Scanner(socketChannel0);
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb((Scanner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Scanner scanner0 = new Scanner("N/A (CustoKwh: -1.0000, Fator Impostos: -1.0000)");
      scanner0.close();
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Scanner closed
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmartBulb smartBulb0 = null;
      try {
        smartBulb0 = new SmartBulb((SmartBulb) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.java.SmartDevice", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 20, (-639.999));
      int int0 = smartBulb0.getTone();
      assertEquals((-639.999), smartBulb0.getTamanho(), 0.01);
      assertEquals(20, int0);
      assertEquals(50.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 20, (-639.999));
      double double0 = smartBulb0.getTamanho();
      assertEquals((-639.999), double0, 0.01);
      assertEquals(50.5, smartBulb0.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 20, (-639.999));
      SmartBulb smartBulb1 = new SmartBulb(smartBulb0);
      assertEquals(20, smartBulb1.getTone());
      assertEquals((-639.999), smartBulb1.getTamanho(), 0.01);
      assertEquals(50.5, smartBulb1.getConsumoDiario(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, 20, (-639.999));
      smartBulb0.calcularConsumoDiario();
      assertEquals(50.5, smartBulb0.getConsumoDiario(), 0.01);
      assertEquals((-639.999), smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        SmartBulb.parse("Cold", (Random) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      try { 
        SmartBulb.parse("Warm", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(0);
      // Undeclared exception!
      try { 
        SmartBulb.parse("Neutral", mockRandom0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      SmartBulb smartBulb0 = SmartBulb.parse("Lampada, id: , OFF, Tone: -328, Tamanho: 0.00", mockRandom0);
      assertNull(smartBulb0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Scanner scanner0 = new Scanner("Lampada, id: , OFF, Tone: -328, Tamanho: 0.00");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Scanner scanner0 = new Scanner("N/A");
      // Undeclared exception!
      try { 
        SmartBulb.criarSmartBulb(scanner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("main.java.SmartBulb", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), 1140.1753917821);
      assertEquals((-1), smartBulb0.getTone());
      
      smartBulb0.setTone(2);
      assertEquals(2, smartBulb0.getTone());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), 1140.1753917821);
      assertEquals((-1), smartBulb0.getTone());
      
      smartBulb0.setTone(740);
      assertEquals(2, smartBulb0.getTone());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), 1140.1753917821);
      assertEquals((-1), smartBulb0.getTone());
      
      smartBulb0.setTone((-1));
      assertEquals(0, smartBulb0.getTone());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb();
      SmartBulb smartBulb1 = smartBulb0.clone();
      assertEquals(1, smartBulb1.getTone());
      assertEquals(3.0, smartBulb1.getConsumoDiario(), 0.01);
      assertEquals(0.0, smartBulb1.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SmartDevice.Modo smartDevice_Modo0 = SmartDevice.Modo.OFF;
      SmartBulb smartBulb0 = new SmartBulb(smartDevice_Modo0, (-1), (-1), 1140.1753917821);
      smartBulb0.setTamanho(0);
      assertEquals(0.0, smartBulb0.getTamanho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SmartBulb smartBulb0 = new SmartBulb((-328));
      String string0 = smartBulb0.toString();
      assertEquals("Lampada, id: , OFF, Tone: -328, Tamanho: 0.00", string0);
      assertEquals((-819.5), smartBulb0.getConsumoDiario(), 0.01);
  }
}
