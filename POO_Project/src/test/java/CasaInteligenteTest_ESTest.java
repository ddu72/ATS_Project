/*
 * This file was automatically generated by EvoSuite
 * Sat May 06 20:51:56 GMT 2023
 */

package src.test.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opentest4j.AssertionFailedError;
import src.main.java.CasaInteligente;
import src.test.java.CasaInteligenteTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CasaInteligenteTest_ESTest extends CasaInteligenteTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.addToRoomTest();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligenteTest0.casaInteligente = casaInteligente0;
      casaInteligenteTest0.addRoomsTest();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligenteTest0.casaInteligente = casaInteligente0;
      // Undeclared exception!
      try { 
        casaInteligenteTest0.setDeviceOnTest();
       //  fail("Expecting exception: AssertionFailedError");
       // Unstable assertion
      } catch(AssertionFailedError e) {
         //
         // Erro ao ligar o dispositivo tipo Camera ==> expected: <ON> but was: <OFF>
         //
         verifyException("org.junit.jupiter.api.AssertionFailureBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      CasaInteligente casaInteligente0 = new CasaInteligente();
      casaInteligenteTest0.casaInteligente = casaInteligente0;
      // Undeclared exception!
      try { 
        casaInteligenteTest0.setAllOnTest();
       //  fail("Expecting exception: AssertionFailedError");
       // Unstable assertion
      } catch(AssertionFailedError e) {
         //
         // Erro ao ligar o dispositivo tipo Camera ==> expected: <ON> but was: <OFF>
         //
         verifyException("org.junit.jupiter.api.AssertionFailureBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.roomHasDeviceTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.hasRoomTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.existsRoomsTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.existsDeviceTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.addDeviceTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.roomHasDeviceTest();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.hasRoomTest();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.existsRoomsTest();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.addDeviceTest();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.setDeviceOnTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.addToRoomTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.setAllOnTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      // Undeclared exception!
      try { 
        casaInteligenteTest0.addRoomsTest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.test.java.CasaInteligenteTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CasaInteligenteTest casaInteligenteTest0 = new CasaInteligenteTest();
      casaInteligenteTest0.setup();
      casaInteligenteTest0.existsDeviceTest();
  }
}
